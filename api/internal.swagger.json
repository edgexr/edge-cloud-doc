{
  "swagger": "2.0",
  "info": {
    "title": "alert.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/add/appalertpolicy": {
      "post": {
        "operationId": "AddAppAlertPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppAlertPolicy"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/add/appautoprovpolicy": {
      "post": {
        "operationId": "AddAppAutoProvPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppAutoProvPolicy"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/add/autoprovpolicycloudlet": {
      "post": {
        "operationId": "AddAutoProvPolicyCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoProvPolicyCloudlet"
            }
          }
        ],
        "tags": [
          "AutoProvPolicyApi"
        ]
      }
    },
    "/add/cloudletpoolmember": {
      "post": {
        "operationId": "AddCloudletPoolMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletPoolMember"
            }
          }
        ],
        "tags": [
          "CloudletPoolApi"
        ]
      }
    },
    "/add/gpudriverbuild": {
      "post": {
        "operationId": "AddGPUDriverBuild",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriverBuildMember"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/add/gputagtbl": {
      "post": {
        "operationId": "AddResTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/add/vmpoolmember": {
      "post": {
        "operationId": "AddVMPoolMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoVMPoolMember"
            }
          }
        ],
        "tags": [
          "VMPoolApi"
        ]
      }
    },
    "/addallianceorg/cloudlet": {
      "post": {
        "operationId": "AddCloudletAllianceOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletAllianceOrg"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/addmapping/cloudlet": {
      "post": {
        "operationId": "AddCloudletResMapping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletResMap"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/addres/flavor": {
      "post": {
        "operationId": "AddFlavorRes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/create/alertpolicy": {
      "post": {
        "operationId": "CreateAlertPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAlertPolicy"
            }
          }
        ],
        "tags": [
          "AlertPolicyApi"
        ]
      }
    },
    "/create/app": {
      "post": {
        "operationId": "CreateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/create/appinst": {
      "post": {
        "summary": "Request Latency measurements for clients connected to AppInst",
        "operationId": "CreateAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/create/autoprovpolicy": {
      "post": {
        "operationId": "CreateAutoProvPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoProvPolicy"
            }
          }
        ],
        "tags": [
          "AutoProvPolicyApi"
        ]
      }
    },
    "/create/autoscalepolicy": {
      "post": {
        "operationId": "CreateAutoScalePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoScalePolicy"
            }
          }
        ],
        "tags": [
          "AutoScalePolicyApi"
        ]
      }
    },
    "/create/cloudlet": {
      "post": {
        "operationId": "CreateCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/create/cloudletpool": {
      "post": {
        "operationId": "CreateCloudletPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletPool"
            }
          }
        ],
        "tags": [
          "CloudletPoolApi"
        ]
      }
    },
    "/create/clusterinst": {
      "post": {
        "operationId": "CreateClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/create/device": {
      "post": {
        "operationId": "InjectDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDevice"
            }
          }
        ],
        "tags": [
          "DeviceApi"
        ]
      }
    },
    "/create/flavor": {
      "post": {
        "operationId": "CreateFlavor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/create/flowratelimitsettings": {
      "post": {
        "operationId": "CreateFlowRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlowRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/create/gpudriver": {
      "post": {
        "operationId": "CreateGPUDriver",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriver"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/create/gputagtbl": {
      "post": {
        "operationId": "CreateResTagTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/create/maxreqsratelimitsettings": {
      "post": {
        "operationId": "CreateMaxReqsRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoMaxReqsRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/create/network": {
      "post": {
        "operationId": "CreateNetwork",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoNetwork"
            }
          }
        ],
        "tags": [
          "NetworkApi"
        ]
      }
    },
    "/create/operatorcode": {
      "post": {
        "operationId": "CreateOperatorCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperatorCode"
            }
          }
        ],
        "tags": [
          "OperatorCodeApi"
        ]
      }
    },
    "/create/trustpolicy": {
      "post": {
        "operationId": "CreateTrustPolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicy"
            }
          }
        ],
        "tags": [
          "TrustPolicyApi"
        ]
      }
    },
    "/create/trustpolicyexception": {
      "post": {
        "operationId": "CreateTrustPolicyException",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicyException"
            }
          }
        ],
        "tags": [
          "TrustPolicyExceptionApi"
        ]
      }
    },
    "/create/vmpool": {
      "post": {
        "operationId": "CreateVMPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoVMPool"
            }
          }
        ],
        "tags": [
          "VMPoolApi"
        ]
      }
    },
    "/debug/disablelevels": {
      "post": {
        "operationId": "DisableDebugLevels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDebugReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDebugRequest"
            }
          }
        ],
        "tags": [
          "DebugApi"
        ]
      }
    },
    "/debug/enablelevels": {
      "post": {
        "operationId": "EnableDebugLevels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDebugReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDebugRequest"
            }
          }
        ],
        "tags": [
          "DebugApi"
        ]
      }
    },
    "/debug/run": {
      "post": {
        "operationId": "RunDebug",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDebugReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDebugRequest"
            }
          }
        ],
        "tags": [
          "DebugApi"
        ]
      }
    },
    "/debug/showlevels": {
      "post": {
        "operationId": "ShowDebugLevels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDebugReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDebugRequest"
            }
          }
        ],
        "tags": [
          "DebugApi"
        ]
      }
    },
    "/delete/alertpolicy": {
      "post": {
        "operationId": "DeleteAlertPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAlertPolicy"
            }
          }
        ],
        "tags": [
          "AlertPolicyApi"
        ]
      }
    },
    "/delete/app": {
      "post": {
        "operationId": "DeleteApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/delete/appinst": {
      "post": {
        "operationId": "DeleteAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/delete/autoprovpolicy": {
      "post": {
        "operationId": "DeleteAutoProvPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoProvPolicy"
            }
          }
        ],
        "tags": [
          "AutoProvPolicyApi"
        ]
      }
    },
    "/delete/autoscalepolicy": {
      "post": {
        "operationId": "DeleteAutoScalePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoScalePolicy"
            }
          }
        ],
        "tags": [
          "AutoScalePolicyApi"
        ]
      }
    },
    "/delete/cloudet": {
      "post": {
        "operationId": "DeleteCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/delete/cloudetvmpool": {
      "post": {
        "operationId": "DeleteVMPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoVMPool"
            }
          }
        ],
        "tags": [
          "VMPoolApi"
        ]
      }
    },
    "/delete/cloudletpool": {
      "post": {
        "operationId": "DeleteCloudletPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletPool"
            }
          }
        ],
        "tags": [
          "CloudletPoolApi"
        ]
      }
    },
    "/delete/clusterinst": {
      "post": {
        "operationId": "DeleteClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/delete/flavor": {
      "post": {
        "operationId": "DeleteFlavor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/delete/flowratelimitsettings": {
      "post": {
        "operationId": "DeleteFlowRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlowRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/delete/gpudriver": {
      "post": {
        "operationId": "DeleteGPUDriver",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriver"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/delete/gputagtbl": {
      "post": {
        "operationId": "DeleteResTagTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/delete/idlereservableclusterinsts": {
      "post": {
        "operationId": "DeleteIdleReservableClusterInsts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoIdleReservableClusterInsts"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/delete/maxreqsratelimitsettings": {
      "post": {
        "operationId": "DeleteMaxReqsRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoMaxReqsRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/delete/network": {
      "post": {
        "operationId": "DeleteNetwork",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoNetwork"
            }
          }
        ],
        "tags": [
          "NetworkApi"
        ]
      }
    },
    "/delete/operatorcode": {
      "post": {
        "operationId": "DeleteOperatorCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperatorCode"
            }
          }
        ],
        "tags": [
          "OperatorCodeApi"
        ]
      }
    },
    "/delete/trustpolicy": {
      "post": {
        "operationId": "DeleteTrustPolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicy"
            }
          }
        ],
        "tags": [
          "TrustPolicyApi"
        ]
      }
    },
    "/delete/trustpolicyexception": {
      "post": {
        "operationId": "DeleteTrustPolicyException",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicyException"
            }
          }
        ],
        "tags": [
          "TrustPolicyExceptionApi"
        ]
      }
    },
    "/evict/device": {
      "post": {
        "operationId": "EvictDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDevice"
            }
          }
        ],
        "tags": [
          "DeviceApi"
        ]
      }
    },
    "/findmapping/cloudlet": {
      "post": {
        "operationId": "FindFlavorMatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavorMatch"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavorMatch"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/generate/cloudletaccesskey": {
      "post": {
        "operationId": "GenerateAccessKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletKey"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/get/cloudlet/manifest": {
      "post": {
        "operationId": "GetCloudletManifest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletManifest"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletKey"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/get/cloudlet/organizations": {
      "post": {
        "operationId": "GetOrganizationsOnCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoOrganization"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletKey"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/get/cloudlet/props": {
      "post": {
        "operationId": "GetCloudletProps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletProps"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletProps"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/get/cloudlet/resource/props": {
      "post": {
        "operationId": "GetCloudletResourceQuotaProps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletResourceQuotaProps"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletResourceQuotaProps"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/get/cloudlet/resource/usage": {
      "post": {
        "operationId": "GetCloudletResourceUsage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletResourceUsage"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletResourceUsage"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/get/gpudriverbuildurl": {
      "post": {
        "operationId": "GetGPUDriverBuildURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriverBuildURL"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriverBuildMember"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/get/gputagtbl": {
      "post": {
        "operationId": "GetResTagTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTableKey"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/inuse/organization": {
      "post": {
        "operationId": "OrganizationInUse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOrganization"
            }
          }
        ],
        "tags": [
          "OrganizationApi"
        ]
      }
    },
    "/refresh/appinst": {
      "post": {
        "operationId": "RefreshAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/remove/appalertpolicy": {
      "post": {
        "operationId": "RemoveAppAlertPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppAlertPolicy"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/remove/appautoprovpolicy": {
      "post": {
        "operationId": "RemoveAppAutoProvPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppAutoProvPolicy"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/remove/cloudletpoolmember": {
      "post": {
        "operationId": "RemoveCloudletPoolMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletPoolMember"
            }
          }
        ],
        "tags": [
          "CloudletPoolApi"
        ]
      }
    },
    "/remove/gpudriverbuild": {
      "post": {
        "operationId": "RemoveGPUDriverBuild",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriverBuildMember"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/removeres/flavor": {
      "post": {
        "operationId": "RemoveFlavorRes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/request/appinstlatency": {
      "post": {
        "operationId": "RequestAppInstLatency",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInstLatency"
            }
          }
        ],
        "tags": [
          "AppInstLatencyApi"
        ]
      }
    },
    "/reset/settings": {
      "post": {
        "operationId": "ResetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoSettings"
            }
          }
        ],
        "tags": [
          "SettingsApi"
        ]
      }
    },
    "/revoke/cloudletaccesskey": {
      "post": {
        "operationId": "RevokeAccessKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletKey"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/rm/autoprovpolicycloudlet": {
      "post": {
        "operationId": "RemoveAutoProvPolicyCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoProvPolicyCloudlet"
            }
          }
        ],
        "tags": [
          "AutoProvPolicyApi"
        ]
      }
    },
    "/rm/gputagtbl": {
      "post": {
        "operationId": "RemoveResTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/rm/vmpoolmember": {
      "post": {
        "operationId": "RemoveVMPoolMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoVMPoolMember"
            }
          }
        ],
        "tags": [
          "VMPoolApi"
        ]
      }
    },
    "/rmallianceorg/cloudlet": {
      "post": {
        "operationId": "RemoveCloudletAllianceOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletAllianceOrg"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/rmmapping/cloudlet": {
      "post": {
        "operationId": "RemoveCloudletResMapping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletResMap"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/show/alert": {
      "post": {
        "summary": "Show alerts",
        "operationId": "ShowAlert",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAlert"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAlert"
            }
          }
        ],
        "tags": [
          "AlertApi"
        ]
      }
    },
    "/show/alertpolicy": {
      "post": {
        "operationId": "ShowAlertPolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAlertPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAlertPolicy"
            }
          }
        ],
        "tags": [
          "AlertPolicyApi"
        ]
      }
    },
    "/show/app": {
      "post": {
        "operationId": "ShowApp",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoApp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/show/appinst": {
      "post": {
        "operationId": "ShowAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAppInst"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/show/appinstclient": {
      "post": {
        "operationId": "ShowAppInstClient",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAppInstClient"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInstClientKey"
            }
          }
        ],
        "tags": [
          "AppInstClientApi"
        ]
      }
    },
    "/show/appinstinfo": {
      "post": {
        "operationId": "ShowAppInstInfo",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAppInstInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInstInfo"
            }
          }
        ],
        "tags": [
          "AppInstInfoApi"
        ]
      }
    },
    "/show/appinstmetrics": {
      "post": {
        "operationId": "ShowAppInstMetrics",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAppInstMetrics"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInstMetrics"
            }
          }
        ],
        "tags": [
          "AppInstMetricsApi"
        ]
      }
    },
    "/show/autoprovpolicy": {
      "post": {
        "operationId": "ShowAutoProvPolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAutoProvPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoProvPolicy"
            }
          }
        ],
        "tags": [
          "AutoProvPolicyApi"
        ]
      }
    },
    "/show/autoscalepolicy": {
      "post": {
        "operationId": "ShowAutoScalePolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoAutoScalePolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoScalePolicy"
            }
          }
        ],
        "tags": [
          "AutoScalePolicyApi"
        ]
      }
    },
    "/show/cloudlet": {
      "post": {
        "operationId": "ShowCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoCloudlet"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/show/cloudletinfo": {
      "post": {
        "operationId": "ShowCloudletInfo",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoCloudletInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletInfo"
            }
          }
        ],
        "tags": [
          "CloudletInfoApi"
        ]
      }
    },
    "/show/cloudletmetrics": {
      "post": {
        "operationId": "ShowCloudletMetrics",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoCloudletMetrics"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletMetrics"
            }
          }
        ],
        "tags": [
          "CloudletMetricsApi"
        ]
      }
    },
    "/show/cloudletpool": {
      "post": {
        "operationId": "ShowCloudletPool",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoCloudletPool"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletPool"
            }
          }
        ],
        "tags": [
          "CloudletPoolApi"
        ]
      }
    },
    "/show/clusterinst": {
      "post": {
        "operationId": "ShowClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoClusterInst"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/show/clusterinstinfo": {
      "post": {
        "operationId": "ShowClusterInstInfo",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoClusterInstInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInstInfo"
            }
          }
        ],
        "tags": [
          "ClusterInstInfoApi"
        ]
      }
    },
    "/show/controller": {
      "post": {
        "operationId": "ShowController",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoController"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoController"
            }
          }
        ],
        "tags": [
          "ControllerApi"
        ]
      }
    },
    "/show/device": {
      "post": {
        "operationId": "ShowDevice",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDevice"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDevice"
            }
          }
        ],
        "tags": [
          "DeviceApi"
        ]
      }
    },
    "/show/devicereport": {
      "post": {
        "operationId": "ShowDeviceReport",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoDevice"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDeviceReport"
            }
          }
        ],
        "tags": [
          "DeviceApi"
        ]
      }
    },
    "/show/flavor": {
      "post": {
        "operationId": "ShowFlavor",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoFlavor"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/show/flowratelimitsettings": {
      "post": {
        "operationId": "ShowFlowRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoFlowRateLimitSettings"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlowRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/show/gpudriver": {
      "post": {
        "operationId": "ShowGPUDriver",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoGPUDriver"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriver"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/show/gputagtbl": {
      "post": {
        "operationId": "ShowResTagTable",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResTagTable"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/show/maxreqsratelimitsettings": {
      "post": {
        "operationId": "ShowMaxReqsRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoMaxReqsRateLimitSettings"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoMaxReqsRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/show/network": {
      "post": {
        "operationId": "ShowNetwork",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoNetwork"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoNetwork"
            }
          }
        ],
        "tags": [
          "NetworkApi"
        ]
      }
    },
    "/show/node": {
      "post": {
        "operationId": "ShowNode",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoNode"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoNode"
            }
          }
        ],
        "tags": [
          "NodeApi"
        ]
      }
    },
    "/show/operatorcode": {
      "post": {
        "operationId": "ShowOperatorCode",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoOperatorCode"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoOperatorCode"
            }
          }
        ],
        "tags": [
          "OperatorCodeApi"
        ]
      }
    },
    "/show/ratelimitsettings": {
      "post": {
        "operationId": "ShowRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoRateLimitSettings"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/show/settings": {
      "post": {
        "operationId": "ShowSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoSettings"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoSettings"
            }
          }
        ],
        "tags": [
          "SettingsApi"
        ]
      }
    },
    "/show/trustpolicy": {
      "post": {
        "operationId": "ShowTrustPolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoTrustPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicy"
            }
          }
        ],
        "tags": [
          "TrustPolicyApi"
        ]
      }
    },
    "/show/trustpolicyexception": {
      "post": {
        "operationId": "ShowTrustPolicyException",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoTrustPolicyException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicyException"
            }
          }
        ],
        "tags": [
          "TrustPolicyExceptionApi"
        ]
      }
    },
    "/show/vmpool": {
      "post": {
        "operationId": "ShowVMPool",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoVMPool"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoVMPool"
            }
          }
        ],
        "tags": [
          "VMPoolApi"
        ]
      }
    },
    "/showmapping/cloudletflavors": {
      "post": {
        "operationId": "ShowFlavorsForCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoFlavorKey"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletKey"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/showmapping/deploymentcloudlets": {
      "post": {
        "operationId": "ShowCloudletsForAppDeployment",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoCloudletKey"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoDeploymentCloudletRequest"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/stream/appinst": {
      "post": {
        "operationId": "StreamAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInstKey"
            }
          }
        ],
        "tags": [
          "StreamObjApi"
        ]
      }
    },
    "/stream/cloudlet": {
      "post": {
        "operationId": "StreamCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletKey"
            }
          }
        ],
        "tags": [
          "StreamObjApi"
        ]
      }
    },
    "/stream/clusterinst": {
      "post": {
        "operationId": "StreamClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInstKey"
            }
          }
        ],
        "tags": [
          "StreamObjApi"
        ]
      }
    },
    "/stream/gpudriver": {
      "post": {
        "operationId": "StreamGPUDriver",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriverKey"
            }
          }
        ],
        "tags": [
          "StreamObjApi"
        ]
      }
    },
    "/update/alertpolicy": {
      "post": {
        "operationId": "UpdateAlertPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAlertPolicy"
            }
          }
        ],
        "tags": [
          "AlertPolicyApi"
        ]
      }
    },
    "/update/app": {
      "post": {
        "operationId": "UpdateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoApp"
            }
          }
        ],
        "tags": [
          "AppApi"
        ]
      }
    },
    "/update/appinst": {
      "post": {
        "operationId": "UpdateAppInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAppInst"
            }
          }
        ],
        "tags": [
          "AppInstApi"
        ]
      }
    },
    "/update/autoprovpolicy": {
      "post": {
        "operationId": "UpdateAutoProvPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoProvPolicy"
            }
          }
        ],
        "tags": [
          "AutoProvPolicyApi"
        ]
      }
    },
    "/update/autoscalepolicy": {
      "post": {
        "operationId": "UpdateAutoScalePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoAutoScalePolicy"
            }
          }
        ],
        "tags": [
          "AutoScalePolicyApi"
        ]
      }
    },
    "/update/cloudlet": {
      "post": {
        "operationId": "UpdateCloudlet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudlet"
            }
          }
        ],
        "tags": [
          "CloudletApi"
        ]
      }
    },
    "/update/cloudletpool": {
      "post": {
        "operationId": "UpdateCloudletPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoCloudletPool"
            }
          }
        ],
        "tags": [
          "CloudletPoolApi"
        ]
      }
    },
    "/update/clusterinst": {
      "post": {
        "operationId": "UpdateClusterInst",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoClusterInst"
            }
          }
        ],
        "tags": [
          "ClusterInstApi"
        ]
      }
    },
    "/update/flavor": {
      "post": {
        "operationId": "UpdateFlavor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlavor"
            }
          }
        ],
        "tags": [
          "FlavorApi"
        ]
      }
    },
    "/update/flowratelimitsettings": {
      "post": {
        "operationId": "UpdateFlowRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoFlowRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/update/gpudriver": {
      "post": {
        "operationId": "UpdateGPUDriver",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoGPUDriver"
            }
          }
        ],
        "tags": [
          "GPUDriverApi"
        ]
      }
    },
    "/update/gputagtbl": {
      "post": {
        "operationId": "UpdateResTagTable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoResTagTable"
            }
          }
        ],
        "tags": [
          "ResTagTableApi"
        ]
      }
    },
    "/update/maxreqsratelimitsettings": {
      "post": {
        "operationId": "UpdateMaxReqsRateLimitSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoMaxReqsRateLimitSettings"
            }
          }
        ],
        "tags": [
          "RateLimitSettingsApi"
        ]
      }
    },
    "/update/network": {
      "post": {
        "operationId": "UpdateNetwork",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoNetwork"
            }
          }
        ],
        "tags": [
          "NetworkApi"
        ]
      }
    },
    "/update/settings": {
      "post": {
        "operationId": "UpdateSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoSettings"
            }
          }
        ],
        "tags": [
          "SettingsApi"
        ]
      }
    },
    "/update/trustpolicy": {
      "post": {
        "operationId": "UpdateTrustPolicy",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicy"
            }
          }
        ],
        "tags": [
          "TrustPolicyApi"
        ]
      }
    },
    "/update/trustpolicyexception": {
      "post": {
        "operationId": "UpdateTrustPolicyException",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoTrustPolicyException"
            }
          }
        ],
        "tags": [
          "TrustPolicyExceptionApi"
        ]
      }
    },
    "/update/vmpool": {
      "post": {
        "operationId": "UpdateVMPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/edgeprotoResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edgeprotoVMPool"
            }
          }
        ],
        "tags": [
          "VMPoolApi"
        ]
      }
    }
  },
  "definitions": {
    "distributed_match_engineAppPort": {
      "type": "object",
      "properties": {
        "proto": {
          "$ref": "#/definitions/distributed_match_engineLProto",
          "title": "TCP (L4) or UDP (L4) protocol"
        },
        "internal_port": {
          "type": "integer",
          "format": "int32",
          "title": "Container port"
        },
        "public_port": {
          "type": "integer",
          "format": "int32",
          "title": "Public facing port for TCP/UDP (may be mapped on shared LB reverse proxy)"
        },
        "fqdn_prefix": {
          "type": "string",
          "description": "skip 4 to preserve the numbering. 4 was path_prefix but was removed since we dont need it after removed http\nFQDN prefix to append to base FQDN in FindCloudlet response. May be empty."
        },
        "end_port": {
          "type": "integer",
          "format": "int32",
          "description": "A non-zero end port indicates a port range from internal port to end port, inclusive."
        },
        "tls": {
          "type": "boolean",
          "format": "boolean",
          "title": "TLS termination for this port"
        },
        "nginx": {
          "type": "boolean",
          "format": "boolean",
          "title": "Use nginx proxy for this port if you really need a transparent proxy (udp only)"
        },
        "max_pkt_size": {
          "type": "string",
          "format": "int64",
          "title": "Maximum datagram size (udp only)"
        }
      },
      "description": "AppPort describes an L4 or L7 public access port/path mapping. This is used to track external to internal mappings for access via a shared load balancer or reverse proxy.",
      "title": "Application Port"
    },
    "distributed_match_engineCloudletState": {
      "type": "string",
      "enum": [
        "CLOUDLET_STATE_UNKNOWN",
        "CLOUDLET_STATE_ERRORS",
        "CLOUDLET_STATE_READY",
        "CLOUDLET_STATE_OFFLINE",
        "CLOUDLET_STATE_NOT_PRESENT",
        "CLOUDLET_STATE_INIT",
        "CLOUDLET_STATE_UPGRADE",
        "CLOUDLET_STATE_NEED_SYNC"
      ],
      "default": "CLOUDLET_STATE_UNKNOWN",
      "description": "CloudletState is the state of the Cloudlet.\n\n - CLOUDLET_STATE_UNKNOWN: Unknown\n - CLOUDLET_STATE_ERRORS: Create/Delete/Update encountered errors (see Errors field of CloudletInfo)\n - CLOUDLET_STATE_READY: Cloudlet is created and ready\n - CLOUDLET_STATE_OFFLINE: Cloudlet is offline (unreachable)\n - CLOUDLET_STATE_NOT_PRESENT: Cloudlet is not present\n - CLOUDLET_STATE_INIT: Cloudlet is initializing\n - CLOUDLET_STATE_UPGRADE: Cloudlet is upgrading\n - CLOUDLET_STATE_NEED_SYNC: Cloudlet needs data to synchronize"
    },
    "distributed_match_engineHealthCheck": {
      "type": "string",
      "enum": [
        "HEALTH_CHECK_UNKNOWN",
        "HEALTH_CHECK_FAIL_ROOTLB_OFFLINE",
        "HEALTH_CHECK_FAIL_SERVER_FAIL",
        "HEALTH_CHECK_OK",
        "HEALTH_CHECK_CLOUDLET_OFFLINE"
      ],
      "default": "HEALTH_CHECK_UNKNOWN",
      "description": "Health check status gets set by external, or rootLB health check\n\n - HEALTH_CHECK_UNKNOWN: Health Check is unknown\n - HEALTH_CHECK_FAIL_ROOTLB_OFFLINE: Health Check failure due to RootLB being offline\n - HEALTH_CHECK_FAIL_SERVER_FAIL: Health Check failure due to Backend server being unavailable\n - HEALTH_CHECK_OK: Health Check is ok\n - HEALTH_CHECK_CLOUDLET_OFFLINE: Health Check failure due to Cloudlet Offline",
      "title": "Health check status"
    },
    "distributed_match_engineLProto": {
      "type": "string",
      "enum": [
        "L_PROTO_UNKNOWN",
        "L_PROTO_TCP",
        "L_PROTO_UDP"
      ],
      "default": "L_PROTO_UNKNOWN",
      "description": "LProto indicates which protocol to use for accessing an application on a particular port. This is required by Kubernetes for port mapping.\n\n0: `L_PROTO_UNKNOWN`\n1: `L_PROTO_TCP`\n2: `L_PROTO_UDP`\n\n - L_PROTO_UNKNOWN: Unknown protocol\n - L_PROTO_TCP: TCP (L4) protocol\n - L_PROTO_UDP: UDP (L4) protocol",
      "title": "Layer4 Protocol"
    },
    "distributed_match_engineLoc": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "Latitude in WGS 84 coordinates"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "Longitude in WGS 84 coordinates"
        },
        "horizontal_accuracy": {
          "type": "number",
          "format": "double",
          "title": "Horizontal accuracy (radius in meters)"
        },
        "vertical_accuracy": {
          "type": "number",
          "format": "double",
          "title": "Vertical accuracy (meters)"
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "title": "On android only lat and long are guaranteed to be supplied\nAltitude in meters"
        },
        "course": {
          "type": "number",
          "format": "double",
          "title": "Course (IOS) / bearing (Android) (degrees east relative to true north)"
        },
        "speed": {
          "type": "number",
          "format": "double",
          "title": "Speed (IOS) / velocity (Android) (meters/sec)"
        },
        "timestamp": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Timestamp"
        }
      },
      "title": "GPS Location"
    },
    "distributed_match_engineMaintenanceState": {
      "type": "string",
      "enum": [
        "NORMAL_OPERATION",
        "MAINTENANCE_START",
        "FAILOVER_REQUESTED",
        "FAILOVER_DONE",
        "FAILOVER_ERROR",
        "MAINTENANCE_START_NO_FAILOVER",
        "CRM_REQUESTED",
        "CRM_UNDER_MAINTENANCE",
        "CRM_ERROR",
        "NORMAL_OPERATION_INIT",
        "UNDER_MAINTENANCE"
      ],
      "default": "NORMAL_OPERATION",
      "description": "Maintenance allows for planned downtimes of Cloudlets.\nThese states involve message exchanges between the Controller,\nthe AutoProv service, and the CRM. Certain states are only set\nby certain actors.\n\n - NORMAL_OPERATION: Normal operational state\n - MAINTENANCE_START: Request start of maintenance\n - FAILOVER_REQUESTED: Trigger failover for any HA AppInsts\n - FAILOVER_DONE: Failover done\n - FAILOVER_ERROR: Some errors encountered during maintenance failover\n - MAINTENANCE_START_NO_FAILOVER: Request start of maintenance without AutoProv failover\n - CRM_REQUESTED: Request CRM to transition to maintenance\n - CRM_UNDER_MAINTENANCE: CRM request done and under maintenance\n - CRM_ERROR: CRM failed to go into maintenance\n - NORMAL_OPERATION_INIT: Request CRM to transition to normal operation\n - UNDER_MAINTENANCE: Under maintenance",
      "title": "Cloudlet Maintenance States"
    },
    "distributed_match_engineTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "This is a simple Timestamp message type\ngrpc-gateway converts google.protobuf.Timestamp into an RFC3339-type string\nwhich is a waste of a conversion, so we define our own"
    },
    "edgeprotoAccessDataReply": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Reply data (type specific)"
        }
      }
    },
    "edgeprotoAccessType": {
      "type": "string",
      "enum": [
        "ACCESS_TYPE_DEFAULT_FOR_DEPLOYMENT",
        "ACCESS_TYPE_DIRECT",
        "ACCESS_TYPE_LOAD_BALANCER"
      ],
      "default": "ACCESS_TYPE_DEFAULT_FOR_DEPLOYMENT",
      "description": "AccessType indicates how to access the app\n\n0: `ACCESS_TYPE_DEFAULT_FOR_DEPLOYMENT`\n1: `ACCESS_TYPE_DIRECT`\n2: `ACCESS_TYPE_LOAD_BALANCER`\n\n - ACCESS_TYPE_DEFAULT_FOR_DEPLOYMENT: Default load balancer or direct based on deployment\n - ACCESS_TYPE_DIRECT: Direct access with no load balancer\n - ACCESS_TYPE_LOAD_BALANCER: Access via a load balancer",
      "title": "(Deprecated) AccessType"
    },
    "edgeprotoAlert": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels uniquely define the alert"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations are extra information about the alert"
        },
        "state": {
          "type": "string",
          "title": "State of the alert"
        },
        "active_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "When alert became active"
        },
        "value": {
          "type": "number",
          "format": "double",
          "title": "Any value associated with alert"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        },
        "controller": {
          "type": "string",
          "title": "Connected controller unique id"
        }
      }
    },
    "edgeprotoAlertPolicy": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "key": {
          "$ref": "#/definitions/edgeprotoAlertPolicyKey",
          "title": "Unique identifier key"
        },
        "cpu_utilization_limit": {
          "type": "integer",
          "format": "int64",
          "title": "Container or pod CPU utilization rate(percentage) across all nodes. Valid values 1-100"
        },
        "mem_utilization_limit": {
          "type": "integer",
          "format": "int64",
          "title": "Container or pod memory utilization rate(percentage) across all nodes. Valid values 1-100"
        },
        "disk_utilization_limit": {
          "type": "integer",
          "format": "int64",
          "title": "Container or pod disk utilization rate(percentage) across all nodes. Valid values 1-100"
        },
        "active_conn_limit": {
          "type": "integer",
          "format": "int64",
          "title": "Active Connections alert threshold. Valid values 1-4294967295"
        },
        "severity": {
          "type": "string",
          "title": "Alert severity level - one of \"info\", \"warning\", \"error\""
        },
        "trigger_time": {
          "type": "string",
          "format": "int64",
          "title": "Duration for which alert interval is active (max 72 hours)"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional Labels"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional Annotations for extra information about the alert"
        },
        "description": {
          "type": "string",
          "title": "Description of the alert policy"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      }
    },
    "edgeprotoAlertPolicyKey": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "title": "Name of the organization for the app that this alert can be applied to"
        },
        "name": {
          "type": "string",
          "title": "Alert Policy name"
        }
      }
    },
    "edgeprotoApiEndpointType": {
      "type": "string",
      "enum": [
        "UNKNOWN_API_ENDPOINT_TYPE",
        "DME"
      ],
      "default": "UNKNOWN_API_ENDPOINT_TYPE"
    },
    "edgeprotoApp": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "required: true\nUnique identifier key"
        },
        "image_path": {
          "type": "string",
          "title": "URI of where image resides"
        },
        "image_type": {
          "$ref": "#/definitions/edgeprotoImageType",
          "title": "Image type (see ImageType)"
        },
        "access_ports": {
          "type": "string",
          "description": "Comma separated list of protocol:port pairs that the App listens on.\nEx: \"tcp:80,udp:10002\".\nAlso supports additional configurations per port:\n(1) tls (tcp-only) - Enables TLS on specified port. Ex: \"tcp:443:tls\".\n(2) nginx (udp-only) - Use NGINX LB instead of envoy for specified port. Ex: \"udp:10001:nginx\".\n(3) maxpktsize (udp-only) - Configures maximum UDP datagram size allowed on port for both upstream/downstream traffic. Ex: \"udp:10001:maxpktsize=8000\"."
        },
        "default_flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Default flavor for the App, which may be overridden by the AppInst"
        },
        "auth_public_key": {
          "type": "string",
          "title": "Public key used for authentication"
        },
        "command": {
          "type": "string",
          "title": "Command that the container runs to start service"
        },
        "annotations": {
          "type": "string",
          "title": "Annotations is a comma separated map of arbitrary key value pairs,\nfor example: key1=val1,key2=val2,key3=\"val 3\""
        },
        "deployment": {
          "type": "string",
          "title": "Deployment type (kubernetes, docker, or vm)"
        },
        "deployment_manifest": {
          "type": "string",
          "description": "Deployment manifest is the deployment specific manifest file/config.\nFor docker deployment, this can be a docker-compose or docker run file.\nFor kubernetes deployment, this can be a kubernetes yaml or helm chart file."
        },
        "deployment_generator": {
          "type": "string",
          "title": "Deployment generator target to generate a basic deployment manifest"
        },
        "android_package_name": {
          "type": "string",
          "title": "Android package name used to match the App name from the Android package"
        },
        "del_opt": {
          "$ref": "#/definitions/edgeprotoDeleteType",
          "title": "Override actions to Controller"
        },
        "configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoConfigFile"
          },
          "title": "Customization files passed through to implementing services"
        },
        "scale_with_cluster": {
          "type": "boolean",
          "format": "boolean",
          "title": "Option to run App on all nodes of the cluster"
        },
        "internal_ports": {
          "type": "boolean",
          "format": "boolean",
          "title": "Should this app have access to outside world?"
        },
        "revision": {
          "type": "string",
          "title": "Revision can be specified or defaults to current timestamp when app is updated"
        },
        "official_fqdn": {
          "type": "string",
          "title": "Official FQDN is the FQDN that the app uses to connect by default"
        },
        "md5sum": {
          "type": "string",
          "title": "MD5Sum of the VM-based app image"
        },
        "auto_prov_policy": {
          "type": "string",
          "title": "(_deprecated_) Auto provisioning policy name"
        },
        "access_type": {
          "$ref": "#/definitions/edgeprotoAccessType",
          "title": "(Deprecated) Access type"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        },
        "auto_prov_policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Auto provisioning policy names, may be specified multiple times"
        },
        "template_delimiter": {
          "type": "string",
          "title": "Delimiter to be used for template parsing, defaults to \"[[ ]]\""
        },
        "skip_hc_ports": {
          "type": "string",
          "title": "Comma separated list of protocol:port pairs that we should not run health check on.\nShould be configured in case app does not always listen on these ports.\n\"all\" can be specified if no health check to be run for this app.\nNumerical values must be decimal format.\ni.e. tcp:80,udp:10002"
        },
        "created_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Created at time"
        },
        "updated_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Updated at time"
        },
        "trusted": {
          "type": "boolean",
          "format": "boolean",
          "title": "Indicates that an instance of this app can be started on a trusted cloudlet"
        },
        "required_outbound_connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoSecurityRule"
          },
          "title": "Connections this app require to determine if the app is compatible with a trust policy"
        },
        "allow_serverless": {
          "type": "boolean",
          "format": "boolean",
          "title": "App is allowed to deploy as serverless containers"
        },
        "serverless_config": {
          "$ref": "#/definitions/edgeprotoServerlessConfig",
          "title": "Configuration when deployed as serverless containers"
        },
        "vm_app_os_type": {
          "$ref": "#/definitions/edgeprotoVmAppOsType",
          "title": "OS Type for VM Apps"
        },
        "alert_policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Alert Policies"
        }
      },
      "description": "App belongs to developer organizations and is used to provide information about their application.",
      "title": "Application"
    },
    "edgeprotoAppAlertPolicy": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "alert_policy": {
          "type": "string",
          "title": "Alert name"
        }
      }
    },
    "edgeprotoAppAutoProvPolicy": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "auto_prov_policy": {
          "type": "string",
          "title": "Auto provisioning policy name"
        }
      }
    },
    "edgeprotoAppInst": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoAppInstKey",
          "title": "required: true\nUnique identifier key"
        },
        "cloudlet_loc": {
          "$ref": "#/definitions/distributed_match_engineLoc",
          "title": "Cached location of the cloudlet"
        },
        "uri": {
          "type": "string",
          "description": "Base FQDN (not really URI) for the App. See Service FQDN for endpoint access."
        },
        "liveness": {
          "$ref": "#/definitions/edgeprotoLiveness",
          "title": "Liveness of instance (see Liveness)"
        },
        "mapped_ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/distributed_match_engineAppPort"
          },
          "description": "For instances accessible via a shared load balancer, defines the external\nports on the shared load balancer that map to the internal ports\nExternal ports should be appended to the Uri for L4 access."
        },
        "flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Flavor defining resource requirements"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "Current state of the AppInst on the Cloudlet"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Any errors trying to create, update, or delete the AppInst on the Cloudlet"
        },
        "crm_override": {
          "$ref": "#/definitions/edgeprotoCRMOverride",
          "title": "Override actions to CRM"
        },
        "runtime_info": {
          "$ref": "#/definitions/edgeprotoAppInstRuntime",
          "title": "AppInst runtime information"
        },
        "created_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Created at time"
        },
        "auto_cluster_ip_access": {
          "$ref": "#/definitions/edgeprotoIpAccess",
          "description": "(Deprecated) IpAccess for auto-clusters. Ignored otherwise."
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "revision": {
          "type": "string",
          "title": "Revision changes each time the App is updated.  Refreshing the App Instance will sync the revision with that of the App"
        },
        "force_update": {
          "type": "boolean",
          "format": "boolean",
          "description": "Force Appinst refresh even if revision number matches App revision number."
        },
        "update_multiple": {
          "type": "boolean",
          "format": "boolean",
          "title": "Allow multiple instances to be updated at once"
        },
        "configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoConfigFile"
          },
          "title": "Customization files passed through to implementing services"
        },
        "health_check": {
          "$ref": "#/definitions/distributed_match_engineHealthCheck",
          "title": "Health Check status"
        },
        "privacy_policy": {
          "type": "string",
          "title": "Optional privacy policy name"
        },
        "power_state": {
          "$ref": "#/definitions/edgeprotoPowerState",
          "title": "Power State of the AppInst"
        },
        "external_volume_size": {
          "type": "string",
          "format": "uint64",
          "title": "Size of external volume to be attached to nodes.  This is for the root partition"
        },
        "availability_zone": {
          "type": "string",
          "title": "Optional Availability Zone if any"
        },
        "vm_flavor": {
          "type": "string",
          "title": "OS node flavor to use"
        },
        "opt_res": {
          "type": "string",
          "title": "Optional Resources required by OS flavor if any"
        },
        "updated_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Updated at time"
        },
        "real_cluster_name": {
          "type": "string",
          "title": "Real ClusterInst name"
        },
        "internal_port_to_lb_ip": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "mapping of ports to load balancer IPs"
        },
        "dedicated_ip": {
          "type": "boolean",
          "format": "boolean",
          "title": "Dedicated IP assigns an IP for this AppInst but requires platform support"
        }
      },
      "description": "AppInst is an instance of an App on a Cloudlet where it is defined by an App plus a ClusterInst key. \nMany of the fields here are inherited from the App definition.",
      "title": "Application Instance"
    },
    "edgeprotoAppInstClient": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "client_key": {
          "$ref": "#/definitions/edgeprotoAppInstClientKey",
          "title": "Unique identifier key"
        },
        "location": {
          "$ref": "#/definitions/distributed_match_engineLoc",
          "title": "Location of the Client"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        }
      },
      "title": "Client is an AppInst client that called FindCloudlet DME Api"
    },
    "edgeprotoAppInstClientKey": {
      "type": "object",
      "properties": {
        "app_inst_key": {
          "$ref": "#/definitions/edgeprotoAppInstKey",
          "title": "AppInst Key"
        },
        "unique_id": {
          "type": "string",
          "title": "AppInstClient Unique Id"
        },
        "unique_id_type": {
          "type": "string",
          "title": "AppInstClient Unique Id Type"
        }
      }
    },
    "edgeprotoAppInstInfo": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoAppInstKey",
          "title": "Unique identifier key"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "Current state of the AppInst on the Cloudlet"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Any errors trying to create, update, or delete the AppInst on the Cloudlet"
        },
        "runtime_info": {
          "$ref": "#/definitions/edgeprotoAppInstRuntime",
          "title": "AppInst runtime information"
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "power_state": {
          "$ref": "#/definitions/edgeprotoPowerState",
          "title": "Power State of the AppInst"
        },
        "uri": {
          "type": "string",
          "title": "Base FQDN for the App based on the cloudlet platform"
        }
      },
      "description": "AppInstInfo provides information from the Cloudlet Resource Manager about the state of the AppInst on the Cloudlet. Whereas the AppInst defines the intent of instantiating an App on a Cloudlet, the AppInstInfo defines the current state of trying to apply that intent on the physical resources of the Cloudlet."
    },
    "edgeprotoAppInstKey": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "cluster_inst_key": {
          "$ref": "#/definitions/edgeprotoVirtualClusterInstKey",
          "title": "Cluster instance on which this is instantiated"
        }
      },
      "description": "AppInstKey uniquely identifies an Application Instance (AppInst) or Application Instance state (AppInstInfo).",
      "title": "App Instance Unique Key"
    },
    "edgeprotoAppInstLatency": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoAppInstKey",
          "title": "Unique identifier key"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "edgeprotoAppInstMetrics": {
      "type": "object",
      "properties": {
        "something": {
          "type": "string",
          "format": "uint64",
          "description": "what goes here?\nNote that metrics for grpc calls can be done by a prometheus\ninterceptor in grpc, so adding call metrics here may be\nredundant unless they're needed for billing."
        }
      },
      "description": "(TODO) AppInstMetrics provide metrics collected about the application instance on the Cloudlet. They are sent to a metrics collector for analytics. They are not stored in the persistent distributed database, but are stored as a time series in some other database or files."
    },
    "edgeprotoAppInstRefKey": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "cluster_inst_key": {
          "$ref": "#/definitions/edgeprotoClusterInstRefKey",
          "title": "Cluster instance on which this is instantiated"
        }
      },
      "description": "AppInstRefKey is app instance key without cloudlet key.",
      "title": "AppInst Ref Key"
    },
    "edgeprotoAppInstRefs": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "insts": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "title": "AppInsts for App (key is JSON of AppInst Key)"
        },
        "delete_requested_insts": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "title": "AppInsts being deleted (key is JSON of AppInst Key)"
        }
      }
    },
    "edgeprotoAppInstRuntime": {
      "type": "object",
      "properties": {
        "container_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of container names"
        }
      },
      "description": "Runtime information of active AppInsts",
      "title": "AppInst Runtime Info"
    },
    "edgeprotoAppKey": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "title": "App developer organization"
        },
        "name": {
          "type": "string",
          "title": "App name"
        },
        "version": {
          "type": "string",
          "title": "App version"
        }
      },
      "description": "AppKey uniquely identifies an App",
      "title": "Application unique key"
    },
    "edgeprotoAutoProvCloudlet": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet key"
        },
        "loc": {
          "$ref": "#/definitions/distributed_match_engineLoc",
          "title": "Cloudlet location"
        }
      },
      "title": "AutoProvCloudlet stores the potential cloudlet and location for DME lookup"
    },
    "edgeprotoAutoProvPolicy": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoPolicyKey",
          "title": "Unique identifier key"
        },
        "deploy_client_count": {
          "type": "integer",
          "format": "int64",
          "title": "Minimum number of clients within the auto deploy interval to trigger deployment"
        },
        "deploy_interval_count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of intervals to check before triggering deployment"
        },
        "cloudlets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoAutoProvCloudlet"
          },
          "title": "Allowed deployment locations"
        },
        "min_active_instances": {
          "type": "integer",
          "format": "int64",
          "title": "Minimum number of active instances for High-Availability"
        },
        "max_instances": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum number of instances (active or not)"
        },
        "undeploy_client_count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of active clients for the undeploy interval below which trigers undeployment, 0 (default) disables auto undeploy"
        },
        "undeploy_interval_count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of intervals to check before triggering undeployment"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "title": "AutoProvPolicy defines the automated provisioning policy"
    },
    "edgeprotoAutoProvPolicyCloudlet": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoPolicyKey",
          "title": "Unique policy identifier key"
        },
        "cloudlet_key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet identifier key"
        }
      },
      "title": "AutoProvPolicyCloudlet is used to add and remove Cloudlets from the Auto Provisioning Policy"
    },
    "edgeprotoAutoScalePolicy": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoPolicyKey",
          "title": "Unique identifier key"
        },
        "min_nodes": {
          "type": "integer",
          "format": "int64",
          "title": "Minimum number of cluster nodes"
        },
        "max_nodes": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum number of cluster nodes"
        },
        "scale_up_cpu_thresh": {
          "type": "integer",
          "format": "int64",
          "title": "(Deprecated) Scale up cpu threshold (percentage 1 to 100), 0 means disabled"
        },
        "scale_down_cpu_thresh": {
          "type": "integer",
          "format": "int64",
          "title": "(Deprecated) Scale down cpu threshold (percentage 1 to 100), 0 means disabled"
        },
        "trigger_time_sec": {
          "type": "integer",
          "format": "int64",
          "description": "(Deprecated) Trigger time defines how long the target must be satified in seconds before acting upon it."
        },
        "stabilization_window_sec": {
          "type": "integer",
          "format": "int64",
          "description": "Stabilization window is the time for which past triggers are considered; the largest scale factor is always taken."
        },
        "target_cpu": {
          "type": "integer",
          "format": "int64",
          "title": "Target per-node cpu utilization (percentage 1 to 100), 0 means disabled"
        },
        "target_mem": {
          "type": "integer",
          "format": "int64",
          "title": "Target per-node memory utilization (percentage 1 to 100), 0 means disabled"
        },
        "target_active_connections": {
          "type": "string",
          "format": "uint64",
          "title": "Target per-node number of active connections, 0 means disabled"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "description": "AutoScalePolicy defines when and how ClusterInsts will have their\nnodes scaled up or down."
    },
    "edgeprotoCRMOverride": {
      "type": "string",
      "enum": [
        "NO_OVERRIDE",
        "IGNORE_CRM_ERRORS",
        "IGNORE_CRM",
        "IGNORE_TRANSIENT_STATE",
        "IGNORE_CRM_AND_TRANSIENT_STATE"
      ],
      "default": "NO_OVERRIDE",
      "description": "CRMOverride can be applied to commands that issue requests to the CRM.\nIt should only be used by administrators when bugs have caused the\nController and CRM to get out of sync. It allows commands from the\nController to ignore errors from the CRM, or ignore the CRM completely\n(messages will not be sent to CRM).\n\n0: `NO_OVERRIDE`\n1: `IGNORE_CRM_ERRORS`\n2: `IGNORE_CRM`\n3: `IGNORE_TRANSIENT_STATE`\n4: `IGNORE_CRM_AND_TRANSIENT_STATE`\n\n - NO_OVERRIDE: No override\n - IGNORE_CRM_ERRORS: Ignore errors from CRM\n - IGNORE_CRM: Ignore CRM completely (does not inform CRM of operation)\n - IGNORE_TRANSIENT_STATE: Ignore Transient State (only admin should use if CRM crashed)\n - IGNORE_CRM_AND_TRANSIENT_STATE: Ignore CRM and Transient State",
      "title": "Overrides default CRM behaviour"
    },
    "edgeprotoCloudlet": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "required: true\nUnique identifier key"
        },
        "location": {
          "$ref": "#/definitions/distributed_match_engineLoc",
          "title": "Location of the Cloudlet site"
        },
        "ip_support": {
          "$ref": "#/definitions/edgeprotoIpSupport",
          "title": "Type of IP support provided by Cloudlet (see IpSupport)"
        },
        "static_ips": {
          "type": "string",
          "title": "List of static IPs for static IP support"
        },
        "num_dynamic_ips": {
          "type": "integer",
          "format": "int32",
          "title": "Number of dynamic IPs available for dynamic IP support"
        },
        "time_limits": {
          "$ref": "#/definitions/edgeprotoOperationTimeLimits",
          "title": "time limits which override global settings if non-zero"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Any errors trying to create, update, or delete the Cloudlet."
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "Current state of the cloudlet"
        },
        "crm_override": {
          "$ref": "#/definitions/edgeprotoCRMOverride",
          "title": "Override actions to CRM"
        },
        "deployment_local": {
          "type": "boolean",
          "format": "boolean",
          "title": "Deploy cloudlet services locally"
        },
        "platform_type": {
          "$ref": "#/definitions/edgeprotoPlatformType",
          "title": "Platform type"
        },
        "notify_srv_addr": {
          "type": "string",
          "title": "Address for the CRM notify listener to run on"
        },
        "flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Min system resource requirements for platform"
        },
        "physical_name": {
          "type": "string",
          "title": "Physical infrastructure cloudlet name"
        },
        "env_var": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Single Key-Value pair of env var to be passed to CRM"
        },
        "container_version": {
          "type": "string",
          "title": "Cloudlet container version"
        },
        "config": {
          "$ref": "#/definitions/edgeprotoPlatformConfig",
          "title": "Platform Config Info"
        },
        "res_tag_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeprotoResTagTableKey"
          },
          "title": "Optional resource to restagtbl key map key values = [gpu, nas, nic]"
        },
        "access_vars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Variables required to access cloudlet"
        },
        "vm_image_version": {
          "type": "string",
          "title": "MobiledgeX baseimage version where CRM services reside"
        },
        "deployment": {
          "type": "string",
          "title": "Deployment type to bring up CRM services (docker, kubernetes)"
        },
        "infra_api_access": {
          "$ref": "#/definitions/edgeprotoInfraApiAccess",
          "title": "Infra Access Type is the type of access available to Infra API Endpoint"
        },
        "infra_config": {
          "$ref": "#/definitions/edgeprotoInfraConfig",
          "title": "Infra specific config"
        },
        "chef_client_key": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Chef client key"
        },
        "maintenance_state": {
          "$ref": "#/definitions/distributed_match_engineMaintenanceState",
          "title": "State for maintenance"
        },
        "override_policy_container_version": {
          "type": "boolean",
          "format": "boolean",
          "title": "Override container version from policy file"
        },
        "vm_pool": {
          "type": "string",
          "title": "VM Pool"
        },
        "crm_access_public_key": {
          "type": "string",
          "title": "CRM access public key"
        },
        "crm_access_key_upgrade_required": {
          "type": "boolean",
          "format": "boolean",
          "title": "CRM access key upgrade required"
        },
        "created_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Created at time"
        },
        "updated_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Updated at time"
        },
        "trust_policy": {
          "type": "string",
          "title": "Optional Trust Policy"
        },
        "trust_policy_state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "State of trust policy"
        },
        "resource_quotas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoResourceQuota"
          },
          "title": "Resource quotas"
        },
        "default_resource_alert_threshold": {
          "type": "integer",
          "format": "int32",
          "title": "Default resource alert threshold percentage"
        },
        "HostController": {
          "type": "string",
          "title": "Address of the controller hosting the cloudlet services if it is running locally"
        },
        "kafka_cluster": {
          "type": "string",
          "title": "Operator provided kafka cluster endpoint to push events to"
        },
        "kafka_user": {
          "type": "string",
          "title": "Username for kafka SASL/PLAIN authentification, stored securely in secret storage and never visible externally"
        },
        "kafka_password": {
          "type": "string",
          "title": "Password for kafka SASL/PLAIN authentification, stored securely in secret storage and never visible externally"
        },
        "gpu_config": {
          "$ref": "#/definitions/edgeprotoGPUConfig",
          "title": "GPU Configuration associated with cloudlet"
        },
        "enable_default_serverless_cluster": {
          "type": "boolean",
          "format": "boolean",
          "title": "Enable experimental default multitenant (serverless) cluster"
        },
        "alliance_orgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "This cloudlet will be treated as directly connected to these additional operator organizations for the purposes of FindCloudlet"
        },
        "single_kubernetes_cluster_owner": {
          "type": "string",
          "title": "For single kubernetes cluster cloudlet platforms, cluster is owned by this organization instead of multi-tenant"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "description": "A Cloudlet is a set of compute resources at a particular location, provided by an Operator.",
      "title": "Cloudlet"
    },
    "edgeprotoCloudletAllianceOrg": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet Key"
        },
        "organization": {
          "type": "string",
          "title": "Alliance organization"
        }
      }
    },
    "edgeprotoCloudletInfo": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Unique identifier key"
        },
        "state": {
          "$ref": "#/definitions/distributed_match_engineCloudletState",
          "title": "State of cloudlet"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        },
        "controller": {
          "type": "string",
          "title": "Connected controller unique id"
        },
        "os_max_ram": {
          "type": "string",
          "format": "uint64",
          "title": "Maximum Ram in MB on the Cloudlet"
        },
        "os_max_vcores": {
          "type": "string",
          "format": "uint64",
          "title": "Maximum number of VCPU cores on the Cloudlet"
        },
        "os_max_vol_gb": {
          "type": "string",
          "format": "uint64",
          "title": "Maximum amount of disk in GB on the Cloudlet"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Any errors encountered while making changes to the Cloudlet"
        },
        "flavors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoFlavorInfo"
          },
          "title": "Supported flavors by the Cloudlet"
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "container_version": {
          "type": "string",
          "title": "Cloudlet container version"
        },
        "availability_zones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoOSAZone"
          },
          "title": "Availability Zones if any"
        },
        "os_images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoOSImage"
          },
          "title": "Local Images availble to cloudlet"
        },
        "controller_cache_received": {
          "type": "boolean",
          "format": "boolean",
          "title": "Indicates all controller data has been sent to CRM"
        },
        "maintenance_state": {
          "$ref": "#/definitions/distributed_match_engineMaintenanceState",
          "title": "State for maintenance"
        },
        "resources_snapshot": {
          "$ref": "#/definitions/edgeprotoInfraResourcesSnapshot",
          "title": "Snapshot of resources used by cloudlet"
        },
        "trust_policy_state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "Trust Policy State"
        },
        "compatibility_version": {
          "type": "integer",
          "format": "int64",
          "title": "Version for compatibility tracking"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Cloudlet properties"
        },
        "node_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoNodeInfo"
          },
          "title": "Cluster node info for serverless platforms (k8s multi-tenant cluster)"
        }
      },
      "description": "CloudletInfo provides information from the Cloudlet Resource Manager about the state of the Cloudlet."
    },
    "edgeprotoCloudletKey": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "title": "Organization of the cloudlet site"
        },
        "name": {
          "type": "string",
          "title": "Name of the cloudlet"
        },
        "federated_organization": {
          "type": "string",
          "title": "Federated operator organization who shared this cloudlet"
        }
      }
    },
    "edgeprotoCloudletManifest": {
      "type": "object",
      "properties": {
        "manifest": {
          "type": "string",
          "description": "Manifest to bringup cloudlet VM and services."
        }
      }
    },
    "edgeprotoCloudletMetrics": {
      "type": "object",
      "properties": {
        "foo": {
          "type": "string",
          "format": "uint64",
          "title": "what goes here?"
        }
      },
      "description": "(TODO) CloudletMetrics provide metrics collected about the Cloudlet. They are sent to a metrics collector for analytics. They are not stored in the persistent distributed database, but are stored as a time series in some other database or files."
    },
    "edgeprotoCloudletMgmtNode": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of Cloudlet Mgmt Node"
        },
        "name": {
          "type": "string",
          "title": "Name of Cloudlet Mgmt Node"
        }
      }
    },
    "edgeprotoCloudletPool": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletPoolKey",
          "title": "CloudletPool key"
        },
        "cloudlets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Cloudlets part of the pool"
        },
        "created_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Created at time"
        },
        "updated_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Updated at time"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "description": "CloudletPool defines a pool of Cloudlets that have restricted access."
    },
    "edgeprotoCloudletPoolKey": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "title": "Name of the organization this pool belongs to"
        },
        "name": {
          "type": "string",
          "title": "CloudletPool Name"
        }
      },
      "description": "CloudletPoolKey uniquely identifies a CloudletPool.",
      "title": "CloudletPool unique key"
    },
    "edgeprotoCloudletPoolMember": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletPoolKey",
          "title": "CloudletPool key"
        },
        "cloudlet_name": {
          "type": "string",
          "title": "Cloudlet name"
        }
      },
      "title": "CloudletPoolMember is used to add and remove a Cloudlet from a CloudletPool"
    },
    "edgeprotoCloudletProps": {
      "type": "object",
      "properties": {
        "platform_type": {
          "$ref": "#/definitions/edgeprotoPlatformType",
          "title": "Platform type"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeprotoPropertyInfo"
          },
          "title": "Single Key-Value pair of env var to be passed to CRM"
        },
        "organization": {
          "type": "string",
          "title": "Organization"
        }
      }
    },
    "edgeprotoCloudletRefs": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet key"
        },
        "root_lb_ports": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          },
          "title": "Used ports on root load balancer. Map key is public port, value is a bitmap for the protocol\nbitmap: bit 0: tcp, bit 1: udp"
        },
        "used_dynamic_ips": {
          "type": "integer",
          "format": "int32",
          "title": "Used dynamic IPs"
        },
        "used_static_ips": {
          "type": "string",
          "title": "Used static IPs"
        },
        "opt_res_used_map": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "title": "Used Optional Resources"
        },
        "reserved_auto_cluster_ids": {
          "type": "string",
          "format": "uint64",
          "description": "Track reservable autoclusterinsts ids in use. This is a bitmap."
        },
        "cluster_insts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoClusterInstRefKey"
          },
          "title": "Clusters instantiated on the Cloudlet"
        },
        "vm_app_insts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoAppInstRefKey"
          },
          "title": "VM apps instantiated on the Cloudlet"
        }
      },
      "description": "CloudletRefs track used resources and Clusters instantiated on a Cloudlet. Used resources are compared against max resources for a Cloudlet to determine if resources are available for a new Cluster to be instantiated on the Cloudlet."
    },
    "edgeprotoCloudletResMap": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Resource cloudlet key"
        },
        "mapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Resource mapping info"
        }
      },
      "title": "optional resource input consists of a resource specifier and clouldkey name"
    },
    "edgeprotoCloudletResourceQuotaProps": {
      "type": "object",
      "properties": {
        "platform_type": {
          "$ref": "#/definitions/edgeprotoPlatformType",
          "title": "Platform type"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoInfraResource"
          },
          "title": "Cloudlet resource properties"
        },
        "organization": {
          "type": "string",
          "title": "Organization"
        }
      }
    },
    "edgeprotoCloudletResourceUsage": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet Key"
        },
        "infra_usage": {
          "type": "boolean",
          "format": "boolean",
          "title": "Show Infra based usage"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoInfraResource"
          },
          "title": "Infra Resource information"
        }
      }
    },
    "edgeprotoClusterInst": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoClusterInstKey",
          "title": "required: true\nUnique key"
        },
        "flavor": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "title": "Flavor of the k8s node"
        },
        "liveness": {
          "$ref": "#/definitions/edgeprotoLiveness",
          "title": "Liveness of instance (see Liveness)"
        },
        "auto": {
          "type": "boolean",
          "format": "boolean",
          "title": "Auto is set to true when automatically created by back-end (internal use only)"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "State of the cluster instance"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Any errors trying to create, update, or delete the ClusterInst on the Cloudlet."
        },
        "crm_override": {
          "$ref": "#/definitions/edgeprotoCRMOverride",
          "title": "Override actions to CRM"
        },
        "ip_access": {
          "$ref": "#/definitions/edgeprotoIpAccess",
          "title": "IP access type (RootLB Type)"
        },
        "allocated_ip": {
          "type": "string",
          "title": "Allocated IP for dedicated access"
        },
        "node_flavor": {
          "type": "string",
          "title": "Cloudlet specific node flavor"
        },
        "deployment": {
          "type": "string",
          "title": "Deployment type (kubernetes or docker)"
        },
        "num_masters": {
          "type": "integer",
          "format": "int64",
          "title": "Number of k8s masters (In case of docker deployment, this field is not required)"
        },
        "num_nodes": {
          "type": "integer",
          "format": "int64",
          "title": "Number of k8s nodes (In case of docker deployment, this field is not required)"
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "external_volume_size": {
          "type": "string",
          "format": "uint64",
          "title": "Size of external volume to be attached to nodes.  This is for the root partition"
        },
        "auto_scale_policy": {
          "type": "string",
          "title": "Auto scale policy name"
        },
        "availability_zone": {
          "type": "string",
          "title": "Optional Resource AZ if any"
        },
        "image_name": {
          "type": "string",
          "title": "Optional resource specific image to launch"
        },
        "reservable": {
          "type": "boolean",
          "format": "boolean",
          "title": "If ClusterInst is reservable"
        },
        "reserved_by": {
          "type": "string",
          "title": "For reservable MobiledgeX ClusterInsts, the current developer tenant"
        },
        "shared_volume_size": {
          "type": "string",
          "format": "uint64",
          "title": "Size of an optional shared volume to be mounted on the master"
        },
        "master_node_flavor": {
          "type": "string",
          "title": "Generic flavor for k8s master VM when worker nodes \u003e 0"
        },
        "skip_crm_cleanup_on_failure": {
          "type": "boolean",
          "format": "boolean",
          "title": "Prevents cleanup of resources on failure within CRM, used for diagnostic purposes"
        },
        "opt_res": {
          "type": "string",
          "title": "Optional Resources required by OS flavor if any"
        },
        "resources": {
          "$ref": "#/definitions/edgeprotoInfraResources",
          "title": "Resources used by cluster"
        },
        "created_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Created at time"
        },
        "updated_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "Updated at time"
        },
        "reservation_ended_at": {
          "$ref": "#/definitions/distributed_match_engineTimestamp",
          "title": "For reservable ClusterInsts, when the last reservation ended"
        },
        "multi_tenant": {
          "type": "boolean",
          "format": "boolean",
          "title": "Multi-tenant kubernetes cluster"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "networks to connect to"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "description": "ClusterInst is an instance of a Cluster on a Cloudlet. \nIt is defined by a Cluster, Cloudlet, and Developer key.",
      "title": "Cluster Instance"
    },
    "edgeprotoClusterInstInfo": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoClusterInstKey",
          "title": "Unique identifier key"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "State of the cluster instance"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Any errors trying to create, update, or delete the ClusterInst on the Cloudlet."
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "resources": {
          "$ref": "#/definitions/edgeprotoInfraResources",
          "title": "Resources allocated to this cluster"
        }
      },
      "description": "ClusterInstInfo provides information from the Cloudlet Resource Manager about the state of the ClusterInst on the Cloudlet. Whereas the ClusterInst defines the intent of instantiating a Cluster on a Cloudlet, the ClusterInstInfo defines the current state of trying to apply that intent on the physical resources of the Cloudlet."
    },
    "edgeprotoClusterInstKey": {
      "type": "object",
      "properties": {
        "cluster_key": {
          "$ref": "#/definitions/edgeprotoClusterKey",
          "title": "Name of Cluster"
        },
        "cloudlet_key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Name of Cloudlet on which the Cluster is instantiated"
        },
        "organization": {
          "type": "string",
          "title": "Name of Developer organization that this cluster belongs to"
        }
      },
      "description": "ClusterInstKey uniquely identifies a Cluster Instance (ClusterInst) or Cluster Instance state (ClusterInstInfo).",
      "title": "Cluster Instance unique key"
    },
    "edgeprotoClusterInstRefKey": {
      "type": "object",
      "properties": {
        "cluster_key": {
          "$ref": "#/definitions/edgeprotoClusterKey",
          "title": "Name of Cluster"
        },
        "organization": {
          "type": "string",
          "title": "Name of Developer organization that this cluster belongs to"
        }
      },
      "description": "ClusterInstRefKey is cluster instance key without cloudlet key.",
      "title": "ClusterInst Ref Key"
    },
    "edgeprotoClusterKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Cluster name"
        }
      },
      "description": "ClusterKey uniquely identifies a Cluster."
    },
    "edgeprotoClusterRefs": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoClusterInstKey",
          "title": "Cluster Instance key"
        },
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoClusterRefsAppInstKey"
          },
          "title": "App instances in the Cluster Instance"
        }
      },
      "description": "ClusterRefs track used resources within a ClusterInst. Each AppInst specifies a set of required resources (Flavor), so tracking resources used by Apps within a Cluster is necessary to determine if enough resources are available for another AppInst to be instantiated on a ClusterInst."
    },
    "edgeprotoClusterRefsAppInstKey": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App key"
        },
        "v_cluster_name": {
          "type": "string",
          "title": "Virtual cluster name"
        }
      },
      "description": "ClusterRefsAppInstKey is an app instance key without the cluster inst key,\nbut including the virtual cluster name. This is used by the ClusterRefs\nto track AppInsts instantiated in the cluster.",
      "title": "ClusterRefs AppInst Key"
    },
    "edgeprotoCollectionInterval": {
      "type": "object",
      "properties": {
        "interval": {
          "type": "string",
          "format": "int64",
          "title": "Collection interval for Influxdb (Specifically used for continuous query intervals) (Data from old continuous queries will be inaccessible if intervals are updated)"
        },
        "retention": {
          "type": "string",
          "format": "int64",
          "title": "Retention duration for Influxdb interval (0 uses default retention policy)"
        }
      },
      "title": "Collection interval for Influxdb (Specifically used for cq intervals, because cannot gogoproto.casttype to Duration for repeated fields otherwise)"
    },
    "edgeprotoConfigFile": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind (type) of config, i.e. envVarsYaml, helmCustomizationYaml"
        },
        "config": {
          "type": "string",
          "title": "Config file contents or URI reference"
        }
      },
      "title": "ConfigFile"
    },
    "edgeprotoContainerInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the container"
        },
        "type": {
          "type": "string",
          "title": "Type can be docker or kubernetes"
        },
        "status": {
          "type": "string",
          "title": "Runtime status of the container"
        },
        "clusterip": {
          "type": "string",
          "title": "IP within the CNI and is applicable to kubernetes only"
        },
        "restarts": {
          "type": "string",
          "format": "int64",
          "title": "Restart count, applicable to kubernetes only"
        }
      },
      "description": "ContainerInfo is infomation about containers running on a VM,",
      "title": "ContainerInfo"
    },
    "edgeprotoController": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoControllerKey",
          "title": "Unique identifier key"
        },
        "build_master": {
          "type": "string",
          "title": "Build Master Version"
        },
        "build_head": {
          "type": "string",
          "title": "Build Head Version"
        },
        "build_author": {
          "type": "string",
          "title": "Build Author"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname"
        }
      },
      "description": "A Controller is a service that manages the edge-cloud data and controls other edge-cloud micro-services."
    },
    "edgeprotoControllerKey": {
      "type": "object",
      "properties": {
        "addr": {
          "type": "string",
          "title": "external API address"
        }
      },
      "title": "ControllerKey uniquely defines a Controller"
    },
    "edgeprotoDebugReply": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/edgeprotoNodeKey",
          "title": "Service node identifier (see NodeShow)"
        },
        "output": {
          "type": "string",
          "title": "Debug output, if any"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "Id used internally"
        }
      }
    },
    "edgeprotoDebugRequest": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/edgeprotoNodeKey",
          "title": "Service node identifier (see NodeShow)"
        },
        "levels": {
          "type": "string",
          "title": "Comma separated list of debug level names: etcd,api,notify,dmereq,locapi,infra,metrics,upgrade,info,sampled"
        },
        "cmd": {
          "type": "string",
          "title": "Debug command (use \"help\" to see available commands)"
        },
        "pretty": {
          "type": "boolean",
          "format": "boolean",
          "title": "if possible, make output pretty"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "Id used internally"
        },
        "args": {
          "type": "string",
          "title": "Additional arguments for cmd"
        },
        "timeout": {
          "type": "string",
          "format": "int64",
          "title": "custom timeout (duration, defaults to 10s)"
        }
      },
      "description": "DebugRequest. Keep everything in one struct to make it easy to send commands without having to change the code."
    },
    "edgeprotoDeleteType": {
      "type": "string",
      "enum": [
        "NO_AUTO_DELETE",
        "AUTO_DELETE"
      ],
      "default": "NO_AUTO_DELETE",
      "description": "DeleteType specifies if AppInst can be auto deleted or not\n\n0: `NO_AUTO_DELETE`\n1: `AUTO_DELETE`\n\n - NO_AUTO_DELETE: No autodelete\n - AUTO_DELETE: Autodelete",
      "title": "DeleteType"
    },
    "edgeprotoDeploymentCloudletRequest": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/edgeprotoApp",
          "title": "Discover potential App Cloudlets"
        },
        "dry_run_deploy": {
          "type": "boolean",
          "format": "boolean",
          "title": "Attempt to qualify cloudlet resources for deployment"
        },
        "num_nodes": {
          "type": "integer",
          "format": "int64",
          "title": "Optional number of worker VMs in dry run K8s Cluster, default = 2"
        }
      }
    },
    "edgeprotoDevice": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "key": {
          "$ref": "#/definitions/edgeprotoDeviceKey",
          "title": "Key"
        },
        "first_seen": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when the device was registered"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when the device was last seen(Future use)"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        }
      },
      "title": "Device represents a device on the MobiledgeX platform\nWe record when this device first showed up on our platform"
    },
    "edgeprotoDeviceKey": {
      "type": "object",
      "properties": {
        "unique_id_type": {
          "type": "string",
          "title": "Type of unique ID provided by the client"
        },
        "unique_id": {
          "type": "string",
          "description": "Unique identification of the client device or user. May be overridden by the server."
        }
      },
      "title": "DeviceKey is an identifier for a given device on the MobiledgeX platform\nIt is defined by a unique id and unique id type\nAnd example of such a device is a MEL device that hosts several applications"
    },
    "edgeprotoDeviceReport": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoDeviceKey",
          "title": "Device Key"
        },
        "begin": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the beginning of the report"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of the beginning of the report"
        }
      },
      "title": "DeviceReport is a reporting message. It takes a begining and end time\nfor the report"
    },
    "edgeprotoExecRequest": {
      "type": "object",
      "properties": {
        "app_inst_key": {
          "$ref": "#/definitions/edgeprotoAppInstKey",
          "title": "Target AppInst"
        },
        "container_id": {
          "type": "string",
          "title": "ContainerId is the name or ID of the target container, if applicable"
        },
        "offer": {
          "type": "string",
          "title": "Offer"
        },
        "answer": {
          "type": "string",
          "title": "Answer"
        },
        "err": {
          "type": "string",
          "title": "Any error message"
        },
        "cmd": {
          "$ref": "#/definitions/edgeprotoRunCmd",
          "title": "Command to run (one of)"
        },
        "log": {
          "$ref": "#/definitions/edgeprotoShowLog",
          "title": "Show log (one of)"
        },
        "console": {
          "$ref": "#/definitions/edgeprotoRunVMConsole",
          "title": "Console (one of)"
        },
        "timeout": {
          "type": "string",
          "format": "int64",
          "title": "Timeout"
        },
        "access_url": {
          "type": "string",
          "title": "Access URL"
        },
        "edge_turn_addr": {
          "type": "string",
          "title": "EdgeTurn Server Address"
        }
      },
      "description": "ExecRequest is a common struct for enabling a connection to execute some work on a container."
    },
    "edgeprotoFlavor": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoFlavorKey",
          "description": "Unique key for the new flavor."
        },
        "ram": {
          "type": "string",
          "format": "uint64",
          "title": "RAM in megabytes"
        },
        "vcpus": {
          "type": "string",
          "format": "uint64",
          "title": "Number of virtual CPUs"
        },
        "disk": {
          "type": "string",
          "format": "uint64",
          "title": "Amount of disk space in gigabytes"
        },
        "opt_res_map": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional Resources request, key = gpu\nform: $resource=$kind:[$alias]$count ex: optresmap=gpu=vgpu:nvidia-63:1"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "description": "Flavors define the compute, memory, and storage capacity of computing instances. \nTo put it simply, a flavor is an available hardware configuration for a server. \nIt defines the size of a virtual server that can be launched."
    },
    "edgeprotoFlavorInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the flavor on the Cloudlet"
        },
        "vcpus": {
          "type": "string",
          "format": "uint64",
          "title": "Number of VCPU cores on the Cloudlet"
        },
        "ram": {
          "type": "string",
          "format": "uint64",
          "title": "Ram in MB on the Cloudlet"
        },
        "disk": {
          "type": "string",
          "format": "uint64",
          "title": "Amount of disk in GB on the Cloudlet"
        },
        "prop_map": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "OS Flavor Properties, if any"
        }
      },
      "title": "Flavor details from the Cloudlet"
    },
    "edgeprotoFlavorKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Flavor name"
        }
      },
      "description": "FlavorKey uniquely identifies a Flavor.",
      "title": "Flavor"
    },
    "edgeprotoFlavorMatch": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet ctx"
        },
        "flavor_name": {
          "type": "string",
          "title": "Flavor name to lookup"
        },
        "availability_zone": {
          "type": "string",
          "title": "availability zone for optional resources if any"
        }
      }
    },
    "edgeprotoFlowRateLimitAlgorithm": {
      "type": "string",
      "enum": [
        "UNKNOWN_FLOW_ALGORITHM",
        "TOKEN_BUCKET_ALGORITHM",
        "LEAKY_BUCKET_ALGORITHM"
      ],
      "default": "UNKNOWN_FLOW_ALGORITHM"
    },
    "edgeprotoFlowRateLimitSettings": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoFlowRateLimitSettingsKey",
          "title": "required: true\nUnique identifier key"
        },
        "settings": {
          "$ref": "#/definitions/edgeprotoFlowSettings",
          "title": "FlowSettings"
        }
      }
    },
    "edgeprotoFlowRateLimitSettingsKey": {
      "type": "object",
      "properties": {
        "flow_settings_name": {
          "type": "string",
          "title": "Unique name for FlowRateLimitSettings (there can be multiple FlowSettings per RateLimitSettingsKey)"
        },
        "rate_limit_key": {
          "$ref": "#/definitions/edgeprotoRateLimitSettingsKey",
          "title": "Key that identifies api and rate limit target for settings"
        }
      }
    },
    "edgeprotoFlowSettings": {
      "type": "object",
      "properties": {
        "flow_algorithm": {
          "$ref": "#/definitions/edgeprotoFlowRateLimitAlgorithm",
          "title": "Flow Rate Limit algorithm"
        },
        "reqs_per_second": {
          "type": "number",
          "format": "double",
          "title": "Requests per second for flow rate limiting"
        },
        "burst_size": {
          "type": "string",
          "format": "int64",
          "title": "Burst size for flow rate limiting (required for TokenBucketAlgorithm)"
        }
      }
    },
    "edgeprotoGPUConfig": {
      "type": "object",
      "properties": {
        "driver": {
          "$ref": "#/definitions/edgeprotoGPUDriverKey",
          "title": "GPU driver key"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Properties to identify specifics of GPU"
        }
      }
    },
    "edgeprotoGPUDriver": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoGPUDriverKey",
          "title": "Unique identifier key"
        },
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoGPUDriverBuild"
          },
          "title": "List of GPU driver build"
        },
        "license_config": {
          "type": "string",
          "title": "License config to setup license (will be stored in secure storage)"
        },
        "license_config_md5sum": {
          "type": "string",
          "title": "License config md5sum, to ensure integrity of license config"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional properties associated with GPU driver build\nFor example: license server information, driver release date, etc"
        },
        "state": {
          "type": "string",
          "title": "State to figure out if any action on the GPU driver is in-progress"
        },
        "ignore_state": {
          "type": "boolean",
          "format": "boolean",
          "title": "Ignore state will ignore any action in-progress on the GPU driver"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      }
    },
    "edgeprotoGPUDriverBuild": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Unique identifier key"
        },
        "driver_path": {
          "type": "string",
          "title": "Path where the driver package is located, if it is authenticated path,\nthen credentials must be passed as part of URL (one-time download path)"
        },
        "driver_path_creds": {
          "type": "string",
          "title": "Optional credentials (username:password) to access driver path"
        },
        "operating_system": {
          "$ref": "#/definitions/edgeprotoOSType",
          "title": "Operator System supported by GPU driver build"
        },
        "kernel_version": {
          "type": "string",
          "title": "Kernel Version supported by GPU driver build"
        },
        "hypervisor_info": {
          "type": "string",
          "title": "Info on hypervisor supported by vGPU driver"
        },
        "md5sum": {
          "type": "string",
          "title": "Driver package md5sum to ensure package is not corrupted"
        }
      }
    },
    "edgeprotoGPUDriverBuildMember": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoGPUDriverKey",
          "title": "Unique identifier key"
        },
        "build": {
          "$ref": "#/definitions/edgeprotoGPUDriverBuild",
          "title": "GPU driver build"
        },
        "ignore_state": {
          "type": "boolean",
          "format": "boolean",
          "title": "Ignore state will ignore any action in-progress on the GPU driver"
        }
      }
    },
    "edgeprotoGPUDriverBuildURL": {
      "type": "object",
      "properties": {
        "build_url_path": {
          "type": "string",
          "title": "Build URL path"
        },
        "validity": {
          "type": "string",
          "format": "int64",
          "title": "Build URL path validity"
        }
      }
    },
    "edgeprotoGPUDriverKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the driver"
        },
        "organization": {
          "type": "string",
          "title": "Organization to which the driver belongs to"
        }
      },
      "description": "GPUDriverKey uniquely identifies a GPU driver",
      "title": "GPU Driver Key"
    },
    "edgeprotoGetCasReply": {
      "type": "object",
      "properties": {
        "ca_chain_pem": {
          "type": "string",
          "title": "CA chain in PEM format"
        }
      }
    },
    "edgeprotoIdleReservableClusterInsts": {
      "type": "object",
      "properties": {
        "idle_time": {
          "type": "string",
          "format": "int64",
          "title": "Idle time (duration)"
        }
      },
      "title": "Parameters for selecting reservable ClusterInsts to delete"
    },
    "edgeprotoImageType": {
      "type": "string",
      "enum": [
        "IMAGE_TYPE_UNKNOWN",
        "IMAGE_TYPE_DOCKER",
        "IMAGE_TYPE_QCOW",
        "IMAGE_TYPE_HELM",
        "IMAGE_TYPE_OVF"
      ],
      "default": "IMAGE_TYPE_UNKNOWN",
      "title": "- IMAGE_TYPE_UNKNOWN: Unknown image type\n - IMAGE_TYPE_DOCKER: Docker container image type compatible either with Docker or Kubernetes\n - IMAGE_TYPE_QCOW: QCOW2 virtual machine image type\n - IMAGE_TYPE_HELM: Helm chart is a separate image type\n - IMAGE_TYPE_OVF: OVF is for VMWare VCloud Director. A VMDK and optional MF file should also be present"
    },
    "edgeprotoInfraApiAccess": {
      "type": "string",
      "enum": [
        "DIRECT_ACCESS",
        "RESTRICTED_ACCESS"
      ],
      "default": "DIRECT_ACCESS",
      "description": "InfraApiAccess is the type of access available to Infra API endpoint\n\n0: `DIRECT_ACCESS`\n1: `RESTRICTED_ACCESS`\n\n - DIRECT_ACCESS: Infra API endpoint is accessible from public network\n - RESTRICTED_ACCESS: Infra API endpoint is not accessible from public network",
      "title": "Infra API Access"
    },
    "edgeprotoInfraConfig": {
      "type": "object",
      "properties": {
        "external_network_name": {
          "type": "string",
          "title": "Infra specific external network name"
        },
        "flavor_name": {
          "type": "string",
          "title": "Infra specific flavor name"
        }
      },
      "title": "Infra specific configuration used for Cloudlet deployments"
    },
    "edgeprotoInfraResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Resource name"
        },
        "value": {
          "type": "string",
          "format": "uint64",
          "title": "Resource value"
        },
        "infra_max_value": {
          "type": "string",
          "format": "uint64",
          "title": "Resource infra max value"
        },
        "quota_max_value": {
          "type": "string",
          "format": "uint64",
          "title": "Resource quota max value"
        },
        "description": {
          "type": "string",
          "title": "Resource description"
        },
        "units": {
          "type": "string",
          "title": "Resource units"
        },
        "alert_threshold": {
          "type": "integer",
          "format": "int32",
          "title": "Generate alert when more than threshold percentage of resource is used"
        }
      },
      "description": "InfraResource is information about cloudlet infra resource.",
      "title": "InfraResource"
    },
    "edgeprotoInfraResources": {
      "type": "object",
      "properties": {
        "vms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoVmInfo"
          },
          "title": "Virtual machine resources info"
        }
      },
      "description": "InfraResources is infomation about infrastructure resources.",
      "title": "InfraResources"
    },
    "edgeprotoInfraResourcesSnapshot": {
      "type": "object",
      "properties": {
        "platform_vms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoVmInfo"
          },
          "title": "Virtual machine resources info"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoInfraResource"
          },
          "title": "Infra Resource information"
        },
        "cluster_insts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoClusterInstRefKey"
          },
          "title": "List of clusterinsts this resources snapshot represent"
        },
        "vm_app_insts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoAppInstRefKey"
          },
          "title": "List of vm appinsts this resources snapshot represent"
        }
      },
      "description": "InfraResourcesSnapshot is snapshot of information about cloudlet infra resources.",
      "title": "InfraResourcesSnapshot"
    },
    "edgeprotoIpAccess": {
      "type": "string",
      "enum": [
        "IP_ACCESS_UNKNOWN",
        "IP_ACCESS_DEDICATED",
        "IP_ACCESS_SHARED"
      ],
      "default": "IP_ACCESS_UNKNOWN",
      "description": "IpAccess indicates the type of RootLB that Developer requires for their App\n\n0: `IP_ACCESS_UNKNOWN`\n1: `IP_ACCESS_DEDICATED`\n3: `IP_ACCESS_SHARED`\n\n - IP_ACCESS_UNKNOWN: Unknown IP access\n - IP_ACCESS_DEDICATED: Dedicated RootLB\n - IP_ACCESS_SHARED: Shared RootLB",
      "title": "IpAccess Options"
    },
    "edgeprotoIpAddr": {
      "type": "object",
      "properties": {
        "externalIp": {
          "type": "string"
        },
        "internalIp": {
          "type": "string"
        }
      },
      "description": "IpAddr is an address for a VM which may have an external and\ninternal component.  Internal and external is with respect to the VM\nand are are often the same unless a natted or floating IP is used.  If \ninternalIP is not reported it is the same as the ExternalIP."
    },
    "edgeprotoIpSupport": {
      "type": "string",
      "enum": [
        "IP_SUPPORT_UNKNOWN",
        "IP_SUPPORT_STATIC",
        "IP_SUPPORT_DYNAMIC"
      ],
      "default": "IP_SUPPORT_UNKNOWN",
      "description": "Static IP support indicates a set of static public IPs are available for use, and managed by the Controller. Dynamic indicates the Cloudlet uses a DHCP server to provide public IP addresses, and the controller has no control over which IPs are assigned.\n\n0: `IP_SUPPORT_UNKNOWN`\n1: `IP_SUPPORT_STATIC`\n2: `IP_SUPPORT_DYNAMIC`\n\n - IP_SUPPORT_UNKNOWN: Unknown IP support\n - IP_SUPPORT_STATIC: Static IP addresses are provided to and managed by Controller\n - IP_SUPPORT_DYNAMIC: IP addresses are dynamically provided by an Operator's DHCP server",
      "title": "Type of public IP support"
    },
    "edgeprotoIssueCertReply": {
      "type": "object",
      "properties": {
        "public_cert_pem": {
          "type": "string",
          "title": "Public certificate in PEM format"
        },
        "private_key_pem": {
          "type": "string",
          "title": "Private key in PEM format"
        }
      }
    },
    "edgeprotoLiveness": {
      "type": "string",
      "enum": [
        "LIVENESS_UNKNOWN",
        "LIVENESS_STATIC",
        "LIVENESS_DYNAMIC",
        "LIVENESS_AUTOPROV"
      ],
      "default": "LIVENESS_UNKNOWN",
      "description": "Liveness indicates if an object was created statically via an external API call, or dynamically via an internal algorithm.\n\n0: `LIVENESS_UNKNOWN`\n1: `LIVENESS_STATIC`\n2: `LIVENESS_DYNAMIC`\n3: `LIVENESS_AUTOPROV`\n\n - LIVENESS_UNKNOWN: Unknown liveness\n - LIVENESS_STATIC: Object managed by external entity\n - LIVENESS_DYNAMIC: Object managed internally\n - LIVENESS_AUTOPROV: Object created by Auto Provisioning, treated like Static except when deleting App",
      "title": "Liveness Options"
    },
    "edgeprotoMaxReqsRateLimitAlgorithm": {
      "type": "string",
      "enum": [
        "UNKNOWN_MAX_REQS_ALGORITHM",
        "FIXED_WINDOW_ALGORITHM"
      ],
      "default": "UNKNOWN_MAX_REQS_ALGORITHM"
    },
    "edgeprotoMaxReqsRateLimitSettings": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoMaxReqsRateLimitSettingsKey",
          "title": "required: true\nUnique identifier key"
        },
        "settings": {
          "$ref": "#/definitions/edgeprotoMaxReqsSettings",
          "title": "MaxReqsSettings"
        }
      }
    },
    "edgeprotoMaxReqsRateLimitSettingsKey": {
      "type": "object",
      "properties": {
        "max_reqs_settings_name": {
          "type": "string",
          "title": "Unique name for MaxReqsRateLimitSettings (there can be multiple MaxReqsSettings per RateLimitSettingsKey)"
        },
        "rate_limit_key": {
          "$ref": "#/definitions/edgeprotoRateLimitSettingsKey",
          "title": "Key that identifies api and rate limit target for settings"
        }
      }
    },
    "edgeprotoMaxReqsSettings": {
      "type": "object",
      "properties": {
        "max_reqs_algorithm": {
          "$ref": "#/definitions/edgeprotoMaxReqsRateLimitAlgorithm",
          "title": "MaxReqs Rate Limit Algorithm"
        },
        "max_requests": {
          "type": "string",
          "format": "int64",
          "title": "Maximum number of requests for the given Interval"
        },
        "interval": {
          "type": "string",
          "format": "int64",
          "title": "Time interval"
        }
      }
    },
    "edgeprotoNetwork": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoNetworkKey",
          "title": "Unique identifier key"
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoRoute"
          },
          "title": "List of routes"
        },
        "connection_type": {
          "$ref": "#/definitions/edgeprotoNetworkConnectionType",
          "title": "Network connection type"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "title": "Network defines additional networks which can be optionally assigned to a cloudlet key and used on a cluster instance"
    },
    "edgeprotoNetworkConnectionType": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "CONNECT_TO_LOAD_BALANCER",
        "CONNECT_TO_CLUSTER_NODES",
        "CONNECT_TO_ALL"
      ],
      "default": "UNDEFINED",
      "description": "NetworkConnectionType is the supported list of network types to be optionally added to a cluster instance\n\n0: `UNDEFINED`\n1: `CONNECT_TO_LOAD_BALANCER`\n2: `CONNECT_TO_CLUSTER_NODES`\n3: `CONNECT_TO_ALL`\n\n - UNDEFINED: Undefined\n - CONNECT_TO_LOAD_BALANCER: Network connects to load balancer\n - CONNECT_TO_CLUSTER_NODES: Network connects to k8s and docker cluster nodes\n - CONNECT_TO_ALL: Network connects to load balancer and all nodes",
      "title": "Network Connection Type"
    },
    "edgeprotoNetworkKey": {
      "type": "object",
      "properties": {
        "cloudlet_key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet that this network can be provisioned on"
        },
        "name": {
          "type": "string",
          "title": "Network Name"
        }
      }
    },
    "edgeprotoNode": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoNodeKey",
          "title": "Unique identifier key"
        },
        "notify_id": {
          "type": "string",
          "format": "int64",
          "title": "Id of client assigned by server (internal use only)"
        },
        "build_master": {
          "type": "string",
          "title": "Build Master Version"
        },
        "build_head": {
          "type": "string",
          "title": "Build Head Version"
        },
        "build_author": {
          "type": "string",
          "title": "Build Author"
        },
        "build_date": {
          "type": "string",
          "title": "Build Date"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname"
        },
        "container_version": {
          "type": "string",
          "title": "Docker edge-cloud container version which node instance use"
        },
        "internal_pki": {
          "type": "string",
          "title": "Internal PKI Config"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional properties"
        }
      },
      "description": "Node identifies an Edge Cloud service."
    },
    "edgeprotoNodeInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Node name"
        },
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeprotoUdec64"
          },
          "title": "Maximum allocatable resources on the node (capacity - overhead)"
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeprotoUdec64"
          },
          "title": "Capacity of underlying resources on the node"
        }
      },
      "description": "NodeInfo is information about a Kubernetes node",
      "title": "NodeInfo"
    },
    "edgeprotoNodeKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name or hostname of node"
        },
        "type": {
          "type": "string",
          "title": "Node type"
        },
        "cloudlet_key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Cloudlet on which node is running, or is associated with"
        },
        "region": {
          "type": "string",
          "title": "Region the node is in"
        }
      },
      "title": "NodeKey uniquely identifies a DME or CRM node"
    },
    "edgeprotoNotice": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/edgeprotoNoticeAction",
          "title": "Action to perform"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "title": "Protocol version supported by sender"
        },
        "any": {
          "$ref": "#/definitions/protobufAny",
          "title": "Data"
        },
        "want_objs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Wanted Objects"
        },
        "filter_cloudlet_key": {
          "type": "boolean",
          "format": "boolean",
          "title": "Filter by cloudlet key"
        },
        "span": {
          "type": "string",
          "title": "Opentracing span"
        },
        "mod_rev": {
          "type": "string",
          "format": "int64",
          "title": "Database revision for which object was last modified"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Extra tags"
        },
        "filter_federated_cloudlet": {
          "type": "boolean",
          "format": "boolean",
          "title": "Filter by federated cloudlet"
        }
      }
    },
    "edgeprotoNoticeAction": {
      "type": "string",
      "enum": [
        "NONE",
        "UPDATE",
        "DELETE",
        "VERSION",
        "SENDALL_END"
      ],
      "default": "NONE",
      "description": "NoticeAction denotes what kind of action this notification is for.\n\n - NONE: No action\n - UPDATE: Update the object\n - DELETE: Delete the object\n - VERSION: Version exchange negotitation message\n - SENDALL_END: Initial send all finished message"
    },
    "edgeprotoOSAZone": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "edgeprotoOSImage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "image name"
        },
        "tags": {
          "type": "string",
          "title": "optional tags present on image"
        },
        "properties": {
          "type": "string",
          "title": "image properties/metadata"
        },
        "disk_format": {
          "type": "string",
          "title": "format qcow2, img, etc"
        }
      }
    },
    "edgeprotoOSType": {
      "type": "string",
      "enum": [
        "LINUX",
        "WINDOWS",
        "OTHERS"
      ],
      "default": "LINUX",
      "description": "OSType is the type of the Operator System\n\n 0: `Linux`\n 1: `Windows`\n20: `Others`\n\n - LINUX: Linux Operating System\n - WINDOWS: Windows Operating System\n - OTHERS: Other Operating Systems",
      "title": "Operating System Type"
    },
    "edgeprotoOperationTimeLimits": {
      "type": "object",
      "properties": {
        "create_cluster_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Override default max time to create a cluster instance (duration)"
        },
        "update_cluster_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Override default max time to update a cluster instance (duration)"
        },
        "delete_cluster_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Override default max time to delete a cluster instance (duration)"
        },
        "create_app_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Override default max time to create an app instance (duration)"
        },
        "update_app_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Override default max time to update an app instance (duration)"
        },
        "delete_app_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Override default max time to delete an app instance (duration)"
        }
      },
      "description": "Time limits for cloudlet create, update and delete operations",
      "title": "Operation time limits"
    },
    "edgeprotoOperatorCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "MCC plus MNC code, or custom carrier code designation."
        },
        "organization": {
          "type": "string",
          "title": "Operator Organization name"
        }
      },
      "title": "OperatorCode maps a carrier code to an Operator organization name"
    },
    "edgeprotoOrganization": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Organization name"
        }
      }
    },
    "edgeprotoPlatformConfig": {
      "type": "object",
      "properties": {
        "container_registry_path": {
          "type": "string",
          "title": "Path to Docker registry holding edge-cloud image"
        },
        "cloudlet_vm_image_path": {
          "type": "string",
          "title": "Path to platform base image"
        },
        "notify_ctrl_addrs": {
          "type": "string",
          "title": "Address of controller notify port (can be multiple of these)"
        },
        "tls_cert_file": {
          "type": "string",
          "title": "TLS cert file"
        },
        "tls_key_file": {
          "type": "string",
          "title": "TLS key file"
        },
        "tls_ca_file": {
          "type": "string",
          "title": "TLS ca file"
        },
        "env_var": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Environment variables"
        },
        "platform_tag": {
          "type": "string",
          "title": "Tag of edge-cloud image"
        },
        "test_mode": {
          "type": "boolean",
          "format": "boolean",
          "title": "Internal Test flag"
        },
        "span": {
          "type": "string",
          "title": "Span string"
        },
        "cleanup_mode": {
          "type": "boolean",
          "format": "boolean",
          "title": "Internal cleanup flag"
        },
        "region": {
          "type": "string",
          "title": "Region"
        },
        "commercial_certs": {
          "type": "boolean",
          "format": "boolean",
          "title": "Get certs from vault or generate your own for the root load balancer"
        },
        "use_vault_pki": {
          "type": "boolean",
          "format": "boolean",
          "title": "Use Vault certs and CAs for internal TLS communication"
        },
        "app_dns_root": {
          "type": "string",
          "title": "App domain name root"
        },
        "chef_server_path": {
          "type": "string",
          "title": "Path to Chef Server"
        },
        "chef_client_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Chef client interval"
        },
        "deployment_tag": {
          "type": "string",
          "title": "Deployment Tag"
        },
        "crm_access_private_key": {
          "type": "string",
          "title": "crm access private key"
        },
        "access_api_addr": {
          "type": "string",
          "title": "controller access API address"
        },
        "cache_dir": {
          "type": "string",
          "title": "cache dir"
        }
      },
      "title": "Platform specific configuration required for Cloudlet management"
    },
    "edgeprotoPlatformType": {
      "type": "string",
      "enum": [
        "PLATFORM_TYPE_FAKE",
        "PLATFORM_TYPE_DIND",
        "PLATFORM_TYPE_OPENSTACK",
        "PLATFORM_TYPE_AZURE",
        "PLATFORM_TYPE_GCP",
        "PLATFORM_TYPE_EDGEBOX",
        "PLATFORM_TYPE_FAKEINFRA",
        "PLATFORM_TYPE_VSPHERE",
        "PLATFORM_TYPE_AWS_EKS",
        "PLATFORM_TYPE_VM_POOL",
        "PLATFORM_TYPE_AWS_EC2",
        "PLATFORM_TYPE_VCD",
        "PLATFORM_TYPE_K8S_BARE_METAL",
        "PLATFORM_TYPE_KIND",
        "PLATFORM_TYPE_KINDINFRA",
        "PLATFORM_TYPE_FAKE_SINGLE_CLUSTER",
        "PLATFORM_TYPE_FEDERATION",
        "PLATFORM_TYPE_FAKE_VM_POOL"
      ],
      "default": "PLATFORM_TYPE_FAKE",
      "description": "PlatformType is the supported list of cloudlet types\n\n0: `PLATFORM_TYPE_FAKE`\n1: `PLATFORM_TYPE_DIND`\n2: `PLATFORM_TYPE_OPENSTACK`\n3: `PLATFORM_TYPE_AZURE`\n4: `PLATFORM_TYPE_GCP`\n5: `PLATFORM_TYPE_EDGEBOX`\n6: `PLATFORM_TYPE_FAKEINFRA`\n7: `PLATFORM_TYPE_VSPHERE`\n8: `PLATFORM_TYPE_AWS_EKS`\n9: `PLATFORM_TYPE_VM_POOL`\n10: `PLATFORM_TYPE_AWS_EC2`\n11: `PLATFORM_TYPE_VCD`\n12: `PLATFORM_TYPE_K8S_BARE_METAL`\n13: `PLATFORM_TYPE_KIND`\n14: `PLATFORM_TYPE_KINDINFRA`\n15: `PLATFORM_TYPE_FAKE_SINGLE_CLUSTER`\n16: `PLATFORM_TYPE_FEDERATION`\n17: `PLATFORM_TYPE_FAKE_VM_POOL`\n\n - PLATFORM_TYPE_FAKE: Fake Cloudlet\n - PLATFORM_TYPE_DIND: DIND Cloudlet\n - PLATFORM_TYPE_OPENSTACK: Openstack Cloudlet\n - PLATFORM_TYPE_AZURE: Azure Cloudlet\n - PLATFORM_TYPE_GCP: GCP Cloudlet\n - PLATFORM_TYPE_EDGEBOX: Edgebox Cloudlet\n - PLATFORM_TYPE_FAKEINFRA: Fake Infra Cloudlet\n - PLATFORM_TYPE_VSPHERE: VMWare VSphere (ESXi)\n - PLATFORM_TYPE_AWS_EKS: AWS EKS Cloudlet\n - PLATFORM_TYPE_VM_POOL: VM Pool Cloudlet\n - PLATFORM_TYPE_AWS_EC2: AWS EC2 VM Cloudlet\n - PLATFORM_TYPE_VCD: VMWare vCloud Director Cloudlet\n - PLATFORM_TYPE_K8S_BARE_METAL: Kubebetes on bare metal\n - PLATFORM_TYPE_KIND: KIND Cloudlet\n - PLATFORM_TYPE_KINDINFRA: KIND Infra Cloudlet\n - PLATFORM_TYPE_FAKE_SINGLE_CLUSTER: Fake Single Cluster Cloudlet\n - PLATFORM_TYPE_FEDERATION: Cloudlet shared as part of federation\n - PLATFORM_TYPE_FAKE_VM_POOL: Fake VM Pool Cloudlet",
      "title": "Platform Type"
    },
    "edgeprotoPolicyKey": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "title": "Name of the organization for the cluster that this policy will apply to"
        },
        "name": {
          "type": "string",
          "title": "Policy name"
        }
      }
    },
    "edgeprotoPowerState": {
      "type": "string",
      "enum": [
        "POWER_STATE_UNKNOWN",
        "POWER_ON_REQUESTED",
        "POWERING_ON",
        "POWER_ON",
        "POWER_OFF_REQUESTED",
        "POWERING_OFF",
        "POWER_OFF",
        "REBOOT_REQUESTED",
        "REBOOTING",
        "REBOOT",
        "POWER_STATE_ERROR"
      ],
      "default": "POWER_STATE_UNKNOWN",
      "description": "Power State of the AppInst\n\n0: `POWER_STATE_UNKNOWN`\n1: `POWER_ON_REQUESTED`\n2: `POWERING_ON`\n3: `POWER_ON`\n4: `POWER_OFF_REQUESTED`\n5: `POWERING_OFF`\n6: `POWER_OFF`\n7: `REBOOT_REQUESTED`\n8: `REBOOTING`\n9: `REBOOT`\n10: `POWER_STATE_ERROR`\n\n - POWER_STATE_UNKNOWN: Unknown\n - POWER_ON_REQUESTED: Power On Requested\n - POWERING_ON: Powering On\n - POWER_ON: Power On\n - POWER_OFF_REQUESTED: Power Off Requested\n - POWERING_OFF: Powering Off\n - POWER_OFF: Power Off\n - REBOOT_REQUESTED: Reboot Requested\n - REBOOTING: Rebooting\n - REBOOT: Reboot\n - POWER_STATE_ERROR: Error",
      "title": "Power State"
    },
    "edgeprotoPropertyInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the property"
        },
        "description": {
          "type": "string",
          "title": "Description of the property"
        },
        "value": {
          "type": "string",
          "title": "Default value of the property"
        },
        "secret": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the property a secret value, will be hidden"
        },
        "mandatory": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the property mandatory"
        },
        "internal": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the property internal, not to be set by Operator"
        }
      }
    },
    "edgeprotoRateLimitSettings": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoRateLimitSettingsKey",
          "title": "Key that identifies api and rate limit target for settings"
        },
        "flow_settings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeprotoFlowSettings"
          },
          "title": "Map of FlowSettings (key: FlowSettingsName, value: FlowSettings)"
        },
        "max_reqs_settings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/edgeprotoMaxReqsSettings"
          },
          "title": "Map of MaxReqsSettings (key: MaxReqsSettingsName, value: MaxReqsSettings)"
        }
      }
    },
    "edgeprotoRateLimitSettingsKey": {
      "type": "object",
      "properties": {
        "api_name": {
          "type": "string",
          "title": "Name of API (eg. CreateApp or RegisterClient) (Use \"Global\" if not a specific API)"
        },
        "api_endpoint_type": {
          "$ref": "#/definitions/edgeprotoApiEndpointType",
          "title": "API Endpoint type"
        },
        "rate_limit_target": {
          "$ref": "#/definitions/edgeprotoRateLimitTarget",
          "title": "Target to rate limit"
        }
      }
    },
    "edgeprotoRateLimitTarget": {
      "type": "string",
      "enum": [
        "UNKNOWN_TARGET",
        "ALL_REQUESTS",
        "PER_IP",
        "PER_USER"
      ],
      "default": "UNKNOWN_TARGET"
    },
    "edgeprotoResTagTable": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "key": {
          "$ref": "#/definitions/edgeprotoResTagTableKey"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "one or more string tags"
        },
        "azone": {
          "type": "string",
          "title": "availability zone(s) of resource if required"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      }
    },
    "edgeprotoResTagTableKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Resource Table Name"
        },
        "organization": {
          "type": "string",
          "description": "Operator organization of the cloudlet site."
        }
      }
    },
    "edgeprotoResourceQuota": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Resource name on which to set quota"
        },
        "value": {
          "type": "string",
          "format": "uint64",
          "title": "Quota value of the resource"
        },
        "alert_threshold": {
          "type": "integer",
          "format": "int32",
          "title": "Generate alert when more than threshold percentage of resource is used"
        }
      },
      "title": "Resource Quota"
    },
    "edgeprotoResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Message, may be success or failure message"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "Error code, 0 indicates success, non-zero indicates failure (not implemented)"
        }
      },
      "description": "Result is a generic object for returning the result of an API call. In general, result is not used. The error value returned by the GRPC API call is used instead."
    },
    "edgeprotoRoute": {
      "type": "object",
      "properties": {
        "destination_cidr": {
          "type": "string",
          "title": "Destination CIDR"
        },
        "next_hop_ip": {
          "type": "string",
          "title": "Next hop IP"
        }
      }
    },
    "edgeprotoRunCmd": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "title": "Command or Shell"
        },
        "cloudlet_mgmt_node": {
          "$ref": "#/definitions/edgeprotoCloudletMgmtNode",
          "title": "Cloudlet Mgmt Node"
        }
      }
    },
    "edgeprotoRunVMConsole": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "VM Console URL"
        }
      }
    },
    "edgeprotoSecurityRule": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "title": "tcp, udp, icmp"
        },
        "port_range_min": {
          "type": "integer",
          "format": "int64",
          "title": "TCP or UDP port range start"
        },
        "port_range_max": {
          "type": "integer",
          "format": "int64",
          "title": "TCP or UDP port range end"
        },
        "remote_cidr": {
          "type": "string",
          "title": "remote CIDR X.X.X.X/X"
        }
      }
    },
    "edgeprotoServerlessConfig": {
      "type": "object",
      "properties": {
        "vcpus": {
          "$ref": "#/definitions/edgeprotoUdec64",
          "title": "Virtual CPUs allocation per container when serverless, may be decimal in increments of 0.001"
        },
        "ram": {
          "type": "string",
          "format": "uint64",
          "title": "RAM allocation in megabytes per container when serverless"
        },
        "min_replicas": {
          "type": "integer",
          "format": "int64",
          "title": "Minimum number of replicas when serverless"
        }
      }
    },
    "edgeprotoSettings": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "shepherd_metrics_collection_interval": {
          "type": "string",
          "format": "int64",
          "title": "Shepherd metrics collection interval for k8s and docker appInstances (duration)"
        },
        "shepherd_alert_evaluation_interval": {
          "type": "string",
          "format": "int64",
          "title": "Shepherd alert evaluation interval for k8s and docker appInstances (duration)"
        },
        "shepherd_metrics_scrape_interval": {
          "type": "string",
          "format": "int64",
          "title": "Shepherd metrics scraping interval (how often metrics are pulled by prometheus, vs pushed to Controller by Shepherd collection)"
        },
        "shepherd_health_check_retries": {
          "type": "integer",
          "format": "int32",
          "title": "Number of times Shepherd Health Check fails before we mark appInst down"
        },
        "shepherd_health_check_interval": {
          "type": "string",
          "format": "int64",
          "title": "Health Checking probing frequency (duration)"
        },
        "auto_deploy_interval_sec": {
          "type": "number",
          "format": "double",
          "title": "Auto Provisioning Stats push and analysis interval (seconds)"
        },
        "auto_deploy_offset_sec": {
          "type": "number",
          "format": "double",
          "title": "Auto Provisioning analysis offset from interval (seconds)"
        },
        "auto_deploy_max_intervals": {
          "type": "integer",
          "format": "int64",
          "title": "Auto Provisioning Policy max allowed intervals"
        },
        "create_app_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Create AppInst timeout (duration)"
        },
        "update_app_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Update AppInst timeout (duration)"
        },
        "delete_app_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Delete AppInst timeout (duration)"
        },
        "create_cluster_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Create ClusterInst timeout (duration)"
        },
        "update_cluster_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Update ClusterInst timeout (duration)"
        },
        "delete_cluster_inst_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Delete ClusterInst timeout (duration)"
        },
        "master_node_flavor": {
          "type": "string",
          "title": "Default flavor for k8s master VM and \u003e 0  workers"
        },
        "max_tracked_dme_clients": {
          "type": "integer",
          "format": "int32",
          "description": "Max DME clients to be tracked at the same time."
        },
        "chef_client_interval": {
          "type": "integer",
          "format": "int32",
          "title": "Default chef client interval (duration)"
        },
        "influx_db_metrics_retention": {
          "type": "string",
          "format": "int64",
          "title": "Default influxDB metrics retention policy (duration)"
        },
        "cloudlet_maintenance_timeout": {
          "type": "integer",
          "format": "int32",
          "title": "Default Cloudlet Maintenance timeout (used twice for AutoProv and Cloudlet)"
        },
        "update_vm_pool_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Update VM pool timeout (duration)"
        },
        "update_trust_policy_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Update Trust Policy timeout (duration)"
        },
        "dme_api_metrics_collection_interval": {
          "type": "string",
          "format": "int64",
          "title": "Metrics collection interval for DME API counts (duration)"
        },
        "edge_events_metrics_collection_interval": {
          "type": "string",
          "format": "int64",
          "title": "Collection interval for edgeevents metrics (latency, device, and custom)"
        },
        "cleanup_reservable_auto_cluster_idletime": {
          "type": "string",
          "format": "int64",
          "title": "Idle reservable ClusterInst clean up time"
        },
        "influx_db_cloudlet_usage_metrics_retention": {
          "type": "string",
          "format": "int64",
          "title": "Default influxDB cloudlet usage metrics retention policy (duration)"
        },
        "create_cloudlet_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Create Cloudlet timeout (duration)"
        },
        "update_cloudlet_timeout": {
          "type": "string",
          "format": "int64",
          "title": "Update Cloudlet timeout (duration)"
        },
        "location_tile_side_length_km": {
          "type": "string",
          "format": "int64",
          "title": "Length of location tiles side for latency metrics (km)"
        },
        "edge_events_metrics_continuous_queries_collection_intervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoCollectionInterval"
          },
          "title": "List of collection intervals for Continuous Queries for EdgeEvents metrics"
        },
        "influx_db_downsampled_metrics_retention": {
          "type": "string",
          "format": "int64",
          "title": "Default retention policy for downsampled influx db (duration)"
        },
        "influx_db_edge_events_metrics_retention": {
          "type": "string",
          "format": "int64",
          "title": "Default retention policy for edgeevents metrics influx db (duration)"
        },
        "appinst_client_cleanup_interval": {
          "type": "string",
          "format": "int64",
          "title": "AppInstClient cleanup thread run interval"
        },
        "cluster_auto_scale_averaging_duration_sec": {
          "type": "string",
          "format": "int64",
          "title": "Cluster auto scale averaging duration for stats to avoid spikes (seconds), avoid setting below 30s or it will not capture any measurements to average"
        },
        "cluster_auto_scale_retry_delay": {
          "type": "string",
          "format": "int64",
          "title": "Cluster auto scale retry delay if scaling failed"
        },
        "alert_policy_min_trigger_time": {
          "type": "string",
          "format": "int64",
          "title": "Minimmum trigger time for alert policies"
        },
        "disable_rate_limit": {
          "type": "boolean",
          "format": "boolean",
          "title": "Disable rate limiting for APIs (default is false)"
        },
        "rate_limit_max_tracked_ips": {
          "type": "string",
          "format": "int64",
          "title": "Maximum number of IPs to track for rate limiting"
        },
        "resource_snapshot_thread_interval": {
          "type": "string",
          "format": "int64",
          "title": "ResourceSnapshot Refresh thread run interval"
        }
      },
      "title": "Global settings"
    },
    "edgeprotoShowLog": {
      "type": "object",
      "properties": {
        "since": {
          "type": "string",
          "title": "Show logs since either a duration ago (5s, 2m, 3h) or a timestamp (RFC3339)"
        },
        "tail": {
          "type": "integer",
          "format": "int32",
          "title": "Show only a recent number of lines"
        },
        "timestamps": {
          "type": "boolean",
          "format": "boolean",
          "title": "Show timestamps"
        },
        "follow": {
          "type": "boolean",
          "format": "boolean",
          "title": "Stream data"
        }
      }
    },
    "edgeprotoStatusInfo": {
      "type": "object",
      "properties": {
        "task_number": {
          "type": "integer",
          "format": "int64"
        },
        "max_tasks": {
          "type": "integer",
          "format": "int64"
        },
        "task_name": {
          "type": "string"
        },
        "step_name": {
          "type": "string"
        },
        "msg_count": {
          "type": "integer",
          "format": "int64"
        },
        "msgs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Used to track status of create/delete/update for resources that are being modified \nby the controller via the CRM.  Tasks are the high level jobs that are to be completed.\nSteps are work items within a task. Within the clusterinst and appinst objects this\nis converted to a string",
      "title": "Status Information"
    },
    "edgeprotoTrackedState": {
      "type": "string",
      "enum": [
        "TRACKED_STATE_UNKNOWN",
        "NOT_PRESENT",
        "CREATE_REQUESTED",
        "CREATING",
        "CREATE_ERROR",
        "READY",
        "UPDATE_REQUESTED",
        "UPDATING",
        "UPDATE_ERROR",
        "DELETE_REQUESTED",
        "DELETING",
        "DELETE_ERROR",
        "DELETE_PREPARE",
        "CRM_INITOK",
        "CREATING_DEPENDENCIES",
        "DELETE_DONE"
      ],
      "default": "TRACKED_STATE_UNKNOWN",
      "description": "TrackedState is used to track the state of an object on a remote node,\ni.e. track the state of a ClusterInst object on the CRM (Cloudlet).\n\n0: `TRACKED_STATE_UNKNOWN`\n1: `NOT_PRESENT`\n2: `CREATE_REQUESTED`\n3: `CREATING`\n4: `CREATE_ERROR`\n5: `READY`\n6: `UPDATE_REQUESTED`\n7: `UPDATING`\n8: `UPDATE_ERROR`\n9: `DELETE_REQUESTED`\n10: `DELETING`\n11: `DELETE_ERROR`\n12: `DELETE_PREPARE`\n13: `CRM_INITOK`\n14: `CREATING_DEPENDENCIES`\n15: `DELETE_DONE`\n\n - TRACKED_STATE_UNKNOWN: Unknown state\n - NOT_PRESENT: Not present (does not exist)\n - CREATE_REQUESTED: Create requested\n - CREATING: Creating\n - CREATE_ERROR: Create error\n - READY: Ready\n - UPDATE_REQUESTED: Update requested\n - UPDATING: Updating\n - UPDATE_ERROR: Update error\n - DELETE_REQUESTED: Delete requested\n - DELETING: Deleting\n - DELETE_ERROR: Delete error\n - DELETE_PREPARE: Delete prepare (extra state used by controller to block other changes)\n - CRM_INITOK: CRM INIT OK\n - CREATING_DEPENDENCIES: Creating dependencies (state used to tracked dependent object change progress)\n - DELETE_DONE: Delete Done",
      "title": "Tracked States"
    },
    "edgeprotoTrustPolicy": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoPolicyKey",
          "title": "Unique identifier key"
        },
        "outbound_security_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoSecurityRule"
          },
          "title": "list of outbound security rules for whitelisting traffic"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "description": "TrustPolicy defines security restrictions for cluster instances\nnodes scaled up or down."
    },
    "edgeprotoTrustPolicyException": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoTrustPolicyExceptionKey",
          "title": "Unique Key composed of App and CloudletPool key"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrustPolicyExceptionState",
          "title": "State of the exception within the approval process"
        },
        "outbound_security_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoSecurityRule"
          },
          "title": "List of outbound security rules for whitelisting traffic"
        }
      }
    },
    "edgeprotoTrustPolicyExceptionKey": {
      "type": "object",
      "properties": {
        "app_key": {
          "$ref": "#/definitions/edgeprotoAppKey",
          "title": "App Key"
        },
        "cloudlet_pool_key": {
          "$ref": "#/definitions/edgeprotoCloudletPoolKey",
          "title": "CloudletPool Key"
        },
        "Name": {
          "type": "string",
          "title": "TrustPolicyExceptionKey name"
        }
      }
    },
    "edgeprotoTrustPolicyExceptionState": {
      "type": "string",
      "enum": [
        "TRUST_POLICY_EXCEPTION_STATE_UNKNOWN",
        "TRUST_POLICY_EXCEPTION_STATE_APPROVAL_REQUESTED",
        "TRUST_POLICY_EXCEPTION_STATE_ACTIVE",
        "TRUST_POLICY_EXCEPTION_STATE_REJECTED"
      ],
      "default": "TRUST_POLICY_EXCEPTION_STATE_UNKNOWN",
      "title": "- TRUST_POLICY_EXCEPTION_STATE_UNKNOWN: Unknown state\n - TRUST_POLICY_EXCEPTION_STATE_APPROVAL_REQUESTED: Created, Awaiting approval\n - TRUST_POLICY_EXCEPTION_STATE_ACTIVE: Approved by Operator and active\n - TRUST_POLICY_EXCEPTION_STATE_REJECTED: Rejected by Operator"
    },
    "edgeprotoUdec64": {
      "type": "object",
      "properties": {
        "whole": {
          "type": "string",
          "format": "uint64",
          "title": "Whole number value"
        },
        "nanos": {
          "type": "integer",
          "format": "int64",
          "title": "Decimal value in nanos"
        }
      },
      "description": "Udec64 is an unsigned decimal with whole number values\nas uint64, and decimal values in nanos.",
      "title": "Udec64"
    },
    "edgeprotoUpgradeAccessKeyServerMsg": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "title": "Message type"
        },
        "crm_private_access_key": {
          "type": "string",
          "title": "New Access key in PEM format (may be blank)"
        }
      }
    },
    "edgeprotoVM": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "VM Name"
        },
        "net_info": {
          "$ref": "#/definitions/edgeprotoVMNetInfo",
          "title": "VM IP"
        },
        "group_name": {
          "type": "string",
          "title": "VM Group Name"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoVMState",
          "title": "VM State"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Last updated time"
        },
        "internal_name": {
          "type": "string",
          "title": "VM Internal Name"
        },
        "flavor": {
          "$ref": "#/definitions/edgeprotoFlavorInfo",
          "title": "VM Flavor"
        }
      }
    },
    "edgeprotoVMNetInfo": {
      "type": "object",
      "properties": {
        "external_ip": {
          "type": "string",
          "title": "External IP"
        },
        "internal_ip": {
          "type": "string",
          "title": "Internal IP"
        }
      }
    },
    "edgeprotoVMPool": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Fields are used for the Update API to specify which fields to apply"
        },
        "key": {
          "$ref": "#/definitions/edgeprotoVMPoolKey",
          "title": "VMPool Key"
        },
        "vms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoVM"
          },
          "title": "list of VMs to be part of VM pool"
        },
        "state": {
          "$ref": "#/definitions/edgeprotoTrackedState",
          "title": "Current state of the VM pool"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Any errors trying to add/remove VM to/from VM Pool"
        },
        "status": {
          "$ref": "#/definitions/edgeprotoStatusInfo",
          "title": "status is used to reflect progress of creation or other events"
        },
        "crm_override": {
          "$ref": "#/definitions/edgeprotoCRMOverride",
          "title": "Override actions to CRM"
        },
        "delete_prepare": {
          "type": "boolean",
          "format": "boolean",
          "title": "Preparing to be deleted"
        }
      },
      "title": "VMPool defines a pool of VMs to be part of a Cloudlet"
    },
    "edgeprotoVMPoolKey": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "title": "Organization of the vmpool"
        },
        "name": {
          "type": "string",
          "title": "Name of the vmpool"
        }
      },
      "description": "VMPoolKey uniquely identifies a VMPool.",
      "title": "VMPool unique key"
    },
    "edgeprotoVMPoolMember": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/edgeprotoVMPoolKey",
          "title": "VMPool key"
        },
        "vm": {
          "$ref": "#/definitions/edgeprotoVM",
          "title": "VM part of VM Pool"
        },
        "crm_override": {
          "$ref": "#/definitions/edgeprotoCRMOverride",
          "title": "Override actions to CRM"
        }
      },
      "title": "VMPoolMember is used to add and remove VM from VM Pool"
    },
    "edgeprotoVMState": {
      "type": "string",
      "enum": [
        "VM_FREE",
        "VM_IN_PROGRESS",
        "VM_IN_USE",
        "VM_ADD",
        "VM_REMOVE",
        "VM_UPDATE",
        "VM_FORCE_FREE"
      ],
      "default": "VM_FREE",
      "description": "VMState is the state of the VM\n\n0: `VM_FREE`\n1: `VM_IN_PROGRESS`\n2: `VM_IN_USE`\n3: `VM_ADD`\n4: `VM_REMOVE`\n5: `VM_UPDATE`\n6: `VM_FORCE_FREE`\n\n - VM_FREE: VM is free to use\n - VM_IN_PROGRESS: VM is in progress\n - VM_IN_USE: VM is in use\n - VM_ADD: Add VM\n - VM_REMOVE: Remove VM\n - VM_UPDATE: Update VM\n - VM_FORCE_FREE: Forcefully free a VM, to be used at user's discretion",
      "title": "VM State"
    },
    "edgeprotoVirtualClusterInstKey": {
      "type": "object",
      "properties": {
        "cluster_key": {
          "$ref": "#/definitions/edgeprotoClusterKey",
          "title": "Name of Cluster"
        },
        "cloudlet_key": {
          "$ref": "#/definitions/edgeprotoCloudletKey",
          "title": "Name of Cloudlet on which the Cluster is instantiated"
        },
        "organization": {
          "type": "string",
          "title": "Name of Developer organization that this cluster belongs to"
        }
      },
      "title": "Virtual ClusterInstKey"
    },
    "edgeprotoVmAppOsType": {
      "type": "string",
      "enum": [
        "VM_APP_OS_UNKNOWN",
        "VM_APP_OS_LINUX",
        "VM_APP_OS_WINDOWS_10",
        "VM_APP_OS_WINDOWS_2012",
        "VM_APP_OS_WINDOWS_2016",
        "VM_APP_OS_WINDOWS_2019"
      ],
      "default": "VM_APP_OS_UNKNOWN",
      "title": "- VM_APP_OS_UNKNOWN: Unknown OS type\n - VM_APP_OS_LINUX: All Linux 64 bit varieties\n - VM_APP_OS_WINDOWS_10: Windows 10\n - VM_APP_OS_WINDOWS_2012: Windows 2012 Server\n - VM_APP_OS_WINDOWS_2016: Windows 2016 Server\n - VM_APP_OS_WINDOWS_2019: Windows 2019 Server"
    },
    "edgeprotoVmInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Virtual machine name"
        },
        "type": {
          "type": "string",
          "title": "Type can be platform, rootlb, cluster-master, cluster-k8s-node, cluster-docker-node, appvm"
        },
        "status": {
          "type": "string",
          "title": "Runtime status of the VM"
        },
        "infraFlavor": {
          "type": "string",
          "title": "Flavor allocated within the cloudlet infrastructure, distinct from the control plane flavor"
        },
        "ipaddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoIpAddr"
          },
          "title": "IP addresses allocated to the VM"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edgeprotoContainerInfo"
          },
          "title": "Information about containers running in the VM"
        }
      },
      "description": "VmInfo is information about Virtual Machine resources.",
      "title": "VmInfo"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "x-stream-definitions": {
    "edgeprotoAlert": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAlert"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAlert"
    },
    "edgeprotoAlertPolicy": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAlertPolicy"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAlertPolicy"
    },
    "edgeprotoApp": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoApp"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoApp"
    },
    "edgeprotoAppInst": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAppInst"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAppInst"
    },
    "edgeprotoAppInstClient": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAppInstClient"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAppInstClient"
    },
    "edgeprotoAppInstInfo": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAppInstInfo"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAppInstInfo"
    },
    "edgeprotoAppInstMetrics": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAppInstMetrics"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAppInstMetrics"
    },
    "edgeprotoAppInstRefs": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAppInstRefs"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAppInstRefs"
    },
    "edgeprotoAutoProvPolicy": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAutoProvPolicy"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAutoProvPolicy"
    },
    "edgeprotoAutoScalePolicy": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoAutoScalePolicy"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoAutoScalePolicy"
    },
    "edgeprotoCloudlet": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudlet"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudlet"
    },
    "edgeprotoCloudletInfo": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudletInfo"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudletInfo"
    },
    "edgeprotoCloudletKey": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudletKey"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudletKey"
    },
    "edgeprotoCloudletMetrics": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudletMetrics"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudletMetrics"
    },
    "edgeprotoCloudletPool": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudletPool"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudletPool"
    },
    "edgeprotoCloudletRefs": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoCloudletRefs"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoCloudletRefs"
    },
    "edgeprotoClusterInst": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoClusterInst"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoClusterInst"
    },
    "edgeprotoClusterInstInfo": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoClusterInstInfo"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoClusterInstInfo"
    },
    "edgeprotoClusterRefs": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoClusterRefs"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoClusterRefs"
    },
    "edgeprotoController": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoController"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoController"
    },
    "edgeprotoDebugReply": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoDebugReply"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoDebugReply"
    },
    "edgeprotoDevice": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoDevice"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoDevice"
    },
    "edgeprotoFlavor": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoFlavor"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoFlavor"
    },
    "edgeprotoFlavorKey": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoFlavorKey"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoFlavorKey"
    },
    "edgeprotoFlowRateLimitSettings": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoFlowRateLimitSettings"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoFlowRateLimitSettings"
    },
    "edgeprotoGPUDriver": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoGPUDriver"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoGPUDriver"
    },
    "edgeprotoMaxReqsRateLimitSettings": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoMaxReqsRateLimitSettings"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoMaxReqsRateLimitSettings"
    },
    "edgeprotoNetwork": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoNetwork"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoNetwork"
    },
    "edgeprotoNode": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoNode"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoNode"
    },
    "edgeprotoNotice": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoNotice"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoNotice"
    },
    "edgeprotoOperatorCode": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoOperatorCode"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoOperatorCode"
    },
    "edgeprotoOrganization": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoOrganization"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoOrganization"
    },
    "edgeprotoRateLimitSettings": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoRateLimitSettings"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoRateLimitSettings"
    },
    "edgeprotoResTagTable": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoResTagTable"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoResTagTable"
    },
    "edgeprotoResult": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoResult"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoResult"
    },
    "edgeprotoTrustPolicy": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoTrustPolicy"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoTrustPolicy"
    },
    "edgeprotoTrustPolicyException": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoTrustPolicyException"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoTrustPolicyException"
    },
    "edgeprotoUpgradeAccessKeyServerMsg": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoUpgradeAccessKeyServerMsg"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoUpgradeAccessKeyServerMsg"
    },
    "edgeprotoVMPool": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/edgeprotoVMPool"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "title": "Stream result of edgeprotoVMPool"
    }
  }
}
